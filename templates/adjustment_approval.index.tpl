{*3/15/2010 4:31:36 PM Andy- Fix Adjustment Approval screen cannot view total amount bugs7/27/2011 4:19:23 PM Justin- Modified the round up for cost to base on config.- Modified the Ctn and Pcs round up to base on config but not fixed by 2.11/23/2012 2:17:00 PM Fithri- after monthly report has been printed, user cannot do further edit (reject, approval or submit) on that month - for consignment only12/23/2013 10:23 AM Fithri- new module 'Stucked Documents Approval'1/28/2014 11:39 AM Justin- Enhanced to have serial no feature.2/18/2014 2:11 PM Fithri- fix json parse bug when rejecting adjustment10/27/2016 9:44 AM Andy- Fixed load approval listing when got config adjustment_branch_selection.7/23/2019 5:09 PM William- Fixed bug adjustment cannot reject adjustment when sn has warning.*}{include file=header.tpl}{literal}<script>{/literal}var global_cost_decimal_points = '{$config.global_cost_decimal_points}';var global_qty_decimal_points = '{$config.global_qty_decimal_points}';var original_approval_bid = '{$original_approval_bid}';var adjustment_branch_selection = int('{$config.adjustment_branch_selection}');{literal}function do_cancel(){	document.f_b.comment.value = '';	var p = prompt('Enter reason to terminate/Cancel:');	if (p.trim()=='' || p==null) return;	document.f_b.comment.value = p;	if (confirm('Press OK to Terminate this Adjustment.'))	{		document.f_b.a.value = "cancel";		document.f_b.submit();	}}function do_approve(){	var is_error = false;	new Ajax.Request("adjustment_approval.php",{		method:'post',		parameters: 'a=approval_validate&curr_date='+document.f_b.curr_date.value+'&id='+document.f_b.id.value+'&branch_id='+document.f_b.branch_id.value,	    evalScripts: true,		onSuccess: function (e) {			eval("var json = "+e.responseText);			for(var tr_key in json){				if(json[tr_key]['error'] != undefined){					$('err').update(json[tr_key]['error']);					is_error = true;				}								if(json[tr_key]['sn_error'] != undefined){					$('div_sn_dialog_content').update(json[tr_key]['sn_error']);					showdiv('div_sn_dialog');					center_div('div_sn_dialog');					new Draggable('div_sn_dialog');					curtain(true);					if(json[tr_key]['error'] == undefined) $('err').update('');					is_error = true;				}			}						if(!is_error){				if (confirm('Press OK to Approve the Adjustment.')){					document.f_b.a.value = "approve";					document.f_b.submit();				}			}    	}	});}function do_reject(){	/*new Ajax.Request("adjustment_approval.php",{		method:'post',		parameters: 'a=approval_validate&curr_date='+document.f_b.curr_date.value+'&id='+document.f_b.id.value+'&branch_id='+document.f_b.branch_id.value,	    evalScripts: true,		onComplete: function (e) {			eval("var json = "+e.responseText);			if (json['error'] != undefined) {				$('err').update(json['error']);				return;			}			for(var tr_key in json){				if(json[tr_key]['ok'] == '1'){*/					document.f_b.comment.value = '';					var p = prompt('Enter reason to reject:');					if (p.trim()=='' || p==null) return;					document.f_b.comment.value = p;					if (confirm('Press OK to Reject the Adjustment.')){						document.f_b.a.value = "reject";						document.f_b.submit();					}					return;				/*}			}    	}	});*/}function select_tab(obj){	if (obj == undefined){		var lst = $('tab').getElementsByTagName("LI");		if (lst.length==0){			alert('Congratulation! You have completed all approval jobs.\nTake a break ;)');			document.location = '/home.php';			return;		}		lst[0].className = "active";		load_approval(lst[0]);	}	else{		var lst = $('tab').getElementsByTagName("LI");		$A(lst).each( function(r,idx) {			if (r.className == "active")				r.className = '';		});		obj.className = "active";		load_approval(obj);	}}function select_curr_tab(id,branch_id) {	var lst = $('tab').getElementsByTagName("LI");	$A(lst).each( function(r,idx) {		var line = r.title.split(",");		if (id == line[0] && branch_id == line[1]) {			r.className = "active";			load_approval(r);			return;		}		else alert('not '+line[0]);	});}function load_approval(obj){    var line = obj.title.split(",");	id =line[0];	branch_id = line[1];	$('sel_name').innerHTML = obj.innerHTML;	$('udiv').innerHTML = '<img src=ui/clock.gif align=absmiddle> Loading...<br><img src=ui/pixel.gif height=500 width=1>';	var params = 'a=ajax_load_adj&id='+id+'&branch_id='+branch_id+'&'+Form.serialize(document.f_on_behalf);	if(adjustment_branch_selection)	params += '&original_approval_bid='+original_approval_bid;	new Ajax.Updater('udiv', 'adjustment_approval.php', {		parameters: params,		evalScripts: true		});}function calc_total(){	var positive=new Array();	var total_qty_p=0;	var total_qty_n=0;	var total_cost=0;	var total_selling = 0;		var e = $('tbl_item').getElementsByClassName('qty');	for(var i=0;i<e.length;i++)	{ 		var temp_1 =new RegExp('^p_qty_');	 	if (temp_1.test(e[i].id)){			total_qty_p+=float(e[i].value);			total_qty_p=float(round(total_qty_p, global_qty_decimal_points));		} 		var temp_2 =new RegExp('^n_qty_');	 	if (temp_2.test(e[i].id)){			total_qty_n+=float(e[i].value);			total_qty_n=float(round(total_qty_n, global_qty_decimal_points));		}				if (/^cost_/.test(e[i].id)){			total_cost+=float(e[i].value);			total_cost=float(round(total_cost, global_cost_decimal_points));		}else if(/^total_selling_/.test(e[i].id)){			total_selling+=float(e[i].value);			total_selling=float(round(total_selling, 2));		}	}	$('total_qty_p').innerHTML=float(round(total_qty_p, global_qty_decimal_points));		$('total_qty_n').innerHTML=float(round(total_qty_n, global_qty_decimal_points));	$('total_cost').innerHTML=round(total_cost,2);	$('total_selling').innerHTML=round(total_selling,2);}function toggle_sn(obj){	if(obj.src.indexOf('expand')>0){		obj.src = '/ui/collapse.gif';		$('sn_details').show();	}else{		obj.src = '/ui/expand.gif';		$('sn_details').hide();	}}function do_proceed(form_name){	if (confirm('Are you sure?')){		document.f_b.a.value = "approve";		document.f_b.target = "";		document.f_b.submit();	}}</script><style>#tab_sel {	border:1px solid #ccc;	width:500px;	padding:4px;	background:#fff url('/ui/findcat_expand.png') right center no-repeat;}#tab_sel ul {	position:absolute;	visibility:hidden;	background:#fff;	border:1px solid #ccc;	border-top:none;	list-style:none;	margin:0;padding:0;	margin-left:-5px;	margin-top:5px;	width:508px;	height:300px;	overflow:auto;}#tab_sel ul li {	cursor:pointer;	display:block;	margin:0;padding:4px;}#tab_sel ul li:hover {	background:#ff9}#tab_sel:hover ul {	visibility:visible;}</style>{/literal}<h1>{$PAGE_TITLE}{if $approval_on_behalf} (on behalf of {$approval_on_behalf.on_behalf_of_u}){/if}</h1><div style="float:left;padding:4px;"><b>Select Adjustment to approve</b></div><div style="float:left" id=tab_sel><span id=sel_name>-</span><ul id=tab>{section name=i loop=$adj}{strip}<li onclick="select_tab(this)" id="tab{$adj[i].id}" title="{$adj[i].id},{$adj[i].branch_id}"> &nbsp; {$adj[i].prefix}{$adj[i].id|string_format:"%05d"} &nbsp; (Branch: {$adj[i].branch_name}, Date: {$adj[i].adjustment_date}, Created: {$adj[i].user_name})</li>{/strip}{/section}</ul></span></div><br style="clear:both"><br><form name="f_on_behalf">	{if $approval_on_behalf}	<input type="hidden" name="on_behalf_of" value="{$approval_on_behalf.on_behalf_of}" />	<input type="hidden" name="on_behalf_by" value="{$approval_on_behalf.on_behalf_by}" />	{/if}</form><div id=udiv><!-- data will be loaded here --></div><script>select_tab();</script>{include file=footer.tpl}