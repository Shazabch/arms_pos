<?/*6/24/2011 4:26:02 PM Andy- Make all branch default sort by sequence, code.*/include("include/common.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");if (!privilege('MASTERFILE')) js_redirect(sprintf($LANG['NO_PRIVILEGE'], 'MASTERFILE', BRANCH_CODE), "/index.php");if (!privilege('MST_BRANCH')) js_redirect(sprintf($LANG['NO_PRIVILEGE'], 'MST_BRANCH', BRANCH_CODE), "/index.php");$maintenance->check(1);$smarty->assign("PAGE_TITLE", "Branch Group Master File");init_table();if (isset($_REQUEST['a'])){	switch ($_REQUEST['a'])	{	    case 'open':	        open();	        exit;		case 'save':		    save();		    exit;		case 'reload_table':		    reload_table();		    exit;		case 'delete_group':		    delete_group();		    exit;		default:			print "<h3>Unhandled Request</h3>";			print_r($_REQUEST);			exit;	}}reload_table(true);$smarty->display("masterfile_branch_group.tpl");function init_table(){ /* moved to maintenance.php */ }function reload_table($sqlonly = false){	global $con, $smarty,$sessioninfo;	$sql = "select bg1.*,count(bg2.branch_id) as item_count from branch_group bg1 left join branch_group_items bg2 on bg1.id=bg2.branch_group_id group by bg1.id order by description";		$con->sql_query($sql) or die(mysql_error());	$table = $con->sql_fetchrowset();	$smarty->assign("table", $table);	if (!$sqlonly) $smarty->display("masterfile_branch_group.table.tpl");}function open(){	global $con,$smarty;	$id = intval($_REQUEST['id']);		$branches_list = array();	// open an existing data	if($id>0){		// load header		$con->sql_query("select * from branch_group where id=$id") or die(mysql_error());		$form = $con->sql_fetchrow();		if($form){  // load items            $con->sql_query("select bg.*,branch.code,branch.description from branch_group_items bg left join branch on bg.branch_id=branch.id where bg.branch_group_id=$id order by branch.sequence, branch.code") or die(mysql_error());            while($r = $con->sql_fetchrow()){				$branches_list[$r['branch_id']] = $r;			}		}	}		// load branches list	$con->sql_query("select * from branch where id not in (select branch_id from branch_group_items) and active=1 order by sequence, code") or die(mysql_error());	while($r = $con->sql_fetchrow()){	    if(!$branches_list[$r['id']])	$branches[$r['id']] = $r;	}		$smarty->assign('branches',$branches);	$smarty->assign('form',$form);	$smarty->assign('branches_list',$branches_list);	$smarty->display('masterfile_branch_group.open.tpl');}function save(){	global $con,$smarty,$sessioninfo;	$id = intval($_REQUEST['id']);	$upd = array();$upd2 = array();		//check for error and store data in upd,upd2	$err = validate_data($upd,$upd2);	if($err){		print $err; // got error		exit;	}		// no error found, start update or insert	$isNew = false;	if($id>0){  // exists data, do update		//$con->sql_query("update branch_group set ".mysql_update_by_field($upd)." where id=$id") or die(mysql_error());		$con->sql_query("update branch_group set ".mysql_update_by_field($upd)." where id=$id",false,false) or die("Error: Cannot have duplicate code");	}else{  // new data, do insert        //$con->sql_query("insert into branch_group ".mysql_insert_by_field($upd)) or die(mysql_error());        $con->sql_query("insert into branch_group ".mysql_insert_by_field($upd),false,false) or die("Error: Cannot have duplicate code");        $id = $con->sql_nextid();        $isNew = true;	}		if(!$isNew){    // if it is exists data, delete items first		$con->sql_query("delete from branch_group_items where branch_group_id=$id") or die(mysql_error());	}	// insert items	foreach($upd2 as $r){	    // if it is new data, assign new id to it		if($isNew)  $r['branch_group_id'] = $id;		$con->sql_query("insert into branch_group_items ".mysql_insert_by_field($r)) or die(mysql_error());	}	print "OK";}function validate_data(&$upd, &$upd2){	global $con,$sessioninfo;		$id = intval($_REQUEST['id']);	$branches_list = $_REQUEST['branches_list'];	$upd['code'] = trim($_REQUEST['code']);	$upd['description'] = trim($_REQUEST['description']);		if(count($branches_list)>1){		foreach($branches_list as $bid){		    $temp = array();		    if($id>0)   $temp['branch_group_id'] = $id;			$temp['branch_id'] = mi($bid);			$ids[] = $bid;			$upd2[] = $temp;		}		// check duplicate branch id		$con->sql_query("select count(*) from branch_group_items where branch_id in (".join(',',$ids).") and branch_group_id<>$id") or die(mysql_error());		if($con->sql_fetchfield(0)>0)   return "Some of the branch already in other branch group";	}else{		return "Please add at least 2 branches";	}		if($upd['description']==''){        return "Please enter name.";	}}function delete_group(){	global $con;    $id = intval($_REQUEST['id']);		if($id>0){	    // delete header		$con->sql_query("delete from branch_group where id=$id") or die(mysql_error());		// delete items		$con->sql_query("delete from branch_group_items where branch_group_id=$id") or die(mysql_error());		reload_table();		exit;	}}?>