<?/*6/12/2008 12:32:19 PM yinsee- update po receive qty upon reject and grn approved on amount check6/19/2008 2:17:33 PM yinsee- fix printing bug where GRN Summary appear multiple page (still count for items that have no variance)9/8/2008 4:29:04 PM yinsee- move update po receiving count to grn.include.php ;)10/22/2008 4:54:54 PM yinsee- no branch filter when search6/23/2009 4:05 PM Andyadd cheking on $config['grn_correction_alt_print_template'] and $config['grn_complete_alt_print_template'] to allow custom print8/20/2009 5:20:15 PM Andy- check form['amout'] is available before varify grn11/5/2009 10:52 PM Jeff- add filter allow only approver to edit amount check11/25/2009 1:43:50 PM Andy- add branch filter for find grn- add don't filter branch if consignment module2/4/2010 6:26:12 PM Andy- change update sku vendor method4/5/2010 4:08:27 PM Andy- Fix GRN after direct verified in amount check still show aprroval name bugs8/6/2010 4:45:12 PM Andy- Add when GRN verify update sku monitoring group items (need config)9/23/2010 5:25:41 PM Justin- Added "save" feature.- Added config define for use GRN future.11/18/2010 12:01:00 PM Justin- Added document type to group by type if found it is using grn future.11/29/2010 1:47:23 PM Justin- Added the missing updates of UOM id for GRN items.12/8/2010 4:17:57 PM Justin- Added the sorting for to base on last update for all GRN list.6/13/2011 5:53:32 PM Justin- Fixed the bugs where user still can edit canceled GRN when it is being canceled from GRR reset.6/14/2011 10:26:11 AM Justin- Fixed the bugs once user rejected a verified GRN and re-confirm it again, that GRN missing from Amount Check.6/24/2011 12:30:31 PM Justin- Modified the ctn and pcs can accept decimal number.9/7/2011 2:08:41 PM Justin- Assigned system die when found user using GRN Future and pretend to access this module.2/28/2012 5:37:21 PM Justin- Fixed bugs of the repopulate vendor sku history to use grr received date instead of grn added date.7/31/2012 11:42:34 AM Justin- Enhanced to have vendor search on GRN list.- Enhanced to pickup branch code.9/21/2012 6:19 PM Justin- Bug fixed on system stuck on amount check window but not allowing user to key in amount after user do "Undo".10/1/2012 4:04 PM Justin- Bug fixed the repopulate data insert into vendor_sku_history to check ctn and pcs must greater than 0.11/23/2012 2:17:00 PM Fithri- after monthly report has been printed, user cannot do further edit (reject, approval or submit) on that month - for consignment only7/3/2013 11:32 AM Fithri- pm notification standardization7/30/2013 3:17 PM Andy- Change module to use get_pm_recipient_list2() and send_pm2() in order to compatible with latest Approval Flow Settings.12/12/2014 11:33 AM Justin- Bug fixed on GRN amount had calculated wrongly.12/16/2014 11:56 AM Justin- Bug fixed on GST info did not check with config.12/22/2014 10:55 AM Justin- Bug fixed on final amount had calculate wrongly.08-Mar-2016 10:20 Edwin- Enhanced to check HQ whether have license to access module */include("include/common.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");if (!privilege('GRN_APPROVAL')) js_redirect(sprintf($LANG['NO_PRIVILEGE'], 'GRN_APPROVAL', BRANCH_CODE), "/index.php");if (BRANCH_CODE == 'HQ' && $config['arms_go_modules'] && !$config['arms_go_enable_official_modules']) js_redirect($LANG['NEED_ARMS_GO_HQ_LICENSE'], "/index.php");$maintenance->check(208);if($config['use_grn_future']){	die("GRN Future does not require this module.");}else{	include("goods_receiving_note1.include.php");}//$approval_status = array(1 => "Approved", 2 => "Rejected", 3 => "KIV (Pending)", 4 => "Terminated");$smarty->assign("PAGE_TITLE", "Account GRN Verification");init_selection();$branch_id = mi($_REQUEST['branch_id']);if ($branch_id == 0){	$branch_id = $sessioninfo['branch_id'];}$id = intval($_REQUEST['id']);if (isset($_REQUEST['a'])){	switch($_REQUEST['a']){			case 'view':		case 'view_detail':        	grn_view_detail($id, $branch_id);			exit;        case 'confirm_detail':        	grn_confirm_detail($id, $branch_id);        	exit;	    case 'verify':			grn_verify();			exit;			case 'save':		case 'save_confirm':			grn_save_confirm($id, $branch_id);			exit;					// change account approval		case 'chown':   			grn_chown($id, $branch_id);			exit;					case 'reject':			grn_reject($id, $branch_id);			exit;					case 'undo_acc':			$con->sql_query("select date_format(added,'%Y-%m-%d') as added from grn where id=".mi($id)." and branch_id=".mi($branch_id)) or die(mysql_error());			$grn_added = $con->sql_fetchfield(0);			if ($config['consignment_global_disable_documents_after_monthly_report'] && $config['consignment_modules'] && is_monthly_report_printed($grn_added,$branch_id)) {				$smarty->assign("printed",1);			}			else {				$con->sql_query("update grn set by_account=0, require_store_confirm=0 where id=".mi($id)." and branch_id=".mi($branch_id));				// set back the flow approval				$con->sql_query("select approval_history_id from grn where id = ".mi($id)." and branch_id = ".mi($branch_id));				$ah_id = $con->sql_fetchfield(0);				$con->sql_freeresult();				$con->sql_query("update branch_approval_history set approvals=flow_approvals where id=".mi($ah_id)." and branch_id=".mi($branch_id)." and ref_table='grn' and ref_id=".mi($id)." and (approvals = '' or approvals is null)");			}	        break;		case 'print_grn_correction':		    if($config['grn_correction_alt_print_template'])   $print_tpl = $config['grn_correction_alt_print_template'];		    else    $print_tpl = 'goods_receiving_note_approval.correction.print.tpl';			grn_print($id, $branch_id, $print_tpl);			exit;					case 'print_grn_complete':		    if($config['grn_complete_alt_print_template'])   $print_tpl = $config['grn_complete_alt_print_template'];		    else    $print_tpl = 'goods_receiving_note_approval.report.print.tpl';			grn_print($id, $branch_id, $print_tpl,true);			exit;		case 'update_po_receiving':			update_po_receiving_count($_REQUEST['doc_no']);			exit;		// regenerate vendor_sku_history from all GRN		case 'repopulate_vendor_sku_history':		    grn_repopulate_vendor_sku_history();			exit;		// regenerate vendor_sku_history from by assigned GRN and BID		case 'repopulate_vendor_sku_history_by_grn':		    update_sku_vendor_history($_REQUEST['grn_id'], $_REQUEST['branch_id']);			exit;					case 'ajax_load_grn_complete':		    get_completed();		    exit;		case 'ajax_load_grn_correction':		    get_correction();		    exit;		    		case 'ajax_load_grn_cancel':		    get_cancel();		    exit;		case 'ajax_load_grn_amount_check':		    get_amount_check();		    exit;		case 'ajax_find':		    find_grn();		    exit;					default:		    print "<h1>Unhandled Request</h1>";		    print_r($_REQUEST);		    exit;	}}$smarty->assign("printed_msg",$LANG['CONSIGNMENT_MONTHLY_REPORT_ALREADY_PRINTED']);$smarty->display("goods_receiving_note_approval.account.tpl");exit;function grn_save_confirm($grn_id, $branch_id){	global $con, $sessioninfo, $smarty, $LANG, $config;		$form=$_REQUEST;			   	$aid = intval($form['approval_history_id']);		$con->sql_query("select date_format(added,'%Y-%m-%d') as added from grn where id=".mi($grn_id)." and branch_id=".mi($branch_id)) or die(mysql_error());	$grn_added = $con->sql_fetchfield(0);	if ($config['consignment_global_disable_documents_after_monthly_report'] && $config['consignment_modules'] && is_monthly_report_printed($grn_added,$branch_id)) {		$_REQUEST['a'] = 'confirm_detail';		$errm['top'][] = $LANG['CONSIGNMENT_MONTHLY_REPORT_ALREADY_PRINTED'];		$smarty->assign("errm", $errm);		grn_confirm_detail($grn_id, $branch_id);		exit;	}    foreach($form['pcs'] as $k=>$dummy){    	$upd['uom_id'] = mi($form['uom_id'][$k]);        $upd['acc_pcs'] = trim($form['acc_pcs'][$k]);        $upd['acc_ctn'] = trim($form['acc_ctn'][$k]);        $upd['acc_cost'] = $form['acc_cost'][$k];        $upd['rcc_status'] = $form['rcc_status'][$k];                // if have account correction on qty, set '0' to the unfilled box 		if ($upd['acc_ctn']!=='' || $upd['acc_pcs']!==''){			$upd['acc_ctn'] = doubleval($upd['acc_ctn']);			$upd['acc_pcs'] = doubleval($upd['acc_pcs']);		}        $upd['po_item_id'] = $form['po_item_id'][$k];        /*		$upd['buyer_adjust'] = $form['buyer_adjust'][$k];        $upd['buyer_action'] = $form['buyer_action'][$k];		*/				if($config['enable_gst'] || $form['acc_gst_id'][$k]){			$upd['acc_gst_id'] = $form['acc_gst_id'][$k];			$upd['acc_gst_code'] = $form['acc_gst_code'][$k];			$upd['acc_gst_rate'] = $form['acc_gst_rate'][$k];		}  		$con->sql_query("update grn_items set ".mysql_update_by_field($upd,false,1)." where id=".mi($k)." and grn_id=$grn_id and branch_id=$branch_id");	}	$upd = array();	$upd['rounding_amt'] = $form['rounding_amt'];	$upd['action_adjustment'] = $form['action_adjustment'];	$upd['acc_action'] = $form['acc_action'];	$upd['buyer_adjustment'] = $form['buyer_adjustment'];	$upd['final_amount'] = $form['ga'];	$upd['dn_issued'] = $form['dn_issued'];	$upd['dn_number'] = $form['dn_number'];	$upd['dn_amount'] = $form['dn_amount'];	$upd['dn_reason'] = $form['dn_reason'];	$upd['last_update'] = "CURRENT_TIMESTAMP";	if($form['a'] == 'save_confirm'){		$upd['approved'] = 1;		$upd['require_store_confirm'] = 0;		$upd['store_confirmed'] = 'CURRENT_TIMESTAMP';		$upd['store_confirmed_by'] = $sessioninfo['id'];	}	$acc_adjustment = update_total_amount($grn_id, $branch_id);	if($final_amount) $upd['acc_adjustment'] = $acc_adjustment;	else $upd['acc_adjustment'] = $form['acc_adjustment'];		$con->sql_query("update grn set ".mysql_update_by_field($upd)." where id=$grn_id and branch_id=$branch_id") or die(mysql_error());		update_total_selling($grn_id, $branch_id);		if($form['a'] == 'save_confirm'){		update_sku_item_cost($grn_id,$branch_id);		    $con->sql_query("update branch_approval_history set approvals = '' where id=$aid and branch_id=$branch_id");			//log the editing		if ($form['approved']>0)			$con->sql_query("insert into branch_approval_history_items (approval_history_id, branch_id, user_id, status, log) values ($aid, $branch_id, $sessioninfo[id], 1, 'GRN Correction modify after confirmed.')");		else			$con->sql_query("insert into branch_approval_history_items (approval_history_id, branch_id, user_id, status, log) values ($aid, $branch_id, $sessioninfo[id], 1, 'GRN Correction performed.')");			//update sku_vendor table		update_sku_vendor_history($grn_id, $branch_id);			//update PO receiving count		if ($form['type']=='PO')			update_po_receiving_count($form['doc_no']);				$type = "confirm";	}else{		$type = "save";	}	header("Location: $_SERVER[PHP_SELF]?t=$type&id=".mi($grn_id));	exit;			}function grn_chown($grn_id, $branch_id){	global $con, $LANG;	$form=$_REQUEST;	$con->sql_query("select id from user left join user_privilege on user.id = user_privilege.user_id where privilege_code = 'GRN_APPROVAL' and user_privilege.branch_id=$branch_id and user.u=".ms($form['new_owner']));	$r = $con->sql_fetchrow();	if ($r)	    $con->sql_query("update grn set by_account=$r[0] where id=$grn_id and branch_id=$branch_id");    if ($r && $con->sql_affectedrows()>0)		printf($LANG['GRN_ACCOUNT_CHOWN_SUCCESS'], $form['new_owner']);	else        printf($LANG['GRN_ACCOUNT_CHOWN_FAILED'], $form['new_owner']);}function grn_verify(){	/*	foreach ($_REQUEST['curr_date'] as $c) $curr_date[] = $c;	echo '<pre>';	print_r($_REQUEST);	echo '</pre>';	exit;	*/	global $con, $config, $sessioninfo, $branch_id;	$form=$_REQUEST; $v=''; $c='';	if($form['amount']){				$has_printed = false;		        foreach ($form['amount'] as $id=>$value){			$curr_date = str_replace('/','-',$form['curr_date'][$id]);			if ($config['consignment_global_disable_documents_after_monthly_report'] && $config['consignment_modules'] && is_monthly_report_printed($curr_date,$branch_id)) {				$has_printed = true;				continue;			}			        if ($value=='') continue;	        // check if amount diff	        $approved=0;			$need_detail=0;			$uu='CURRENT_TIMESTAMP';			$require_store_confirm=1;			if ($config['grn_always_require_correction'])			{				// always require correction regardless qty or amount variance				// special for SMART-CENTER use				$sc.=sprintf('GRN%05d\n',$id);			}			else if($form['grn_amount'][$id]==$value && ($config['grn_verification_allow_qty_variance'] || $form['grn_variance'][$id]==0) && $form['foc_variance'][$id]==0) {				// no amount variance, and no qty variance or qty variance is allowed		    	$approved=1;		    	$require_store_confirm=0;		    	$c.=sprintf('GRN%05d\n',$id);			}			else{				// if qty variance or grn amount variance, proceed to GRN Correction				$v.=sprintf('GRN%05d\n',$id);			}			$id=intval($id);	        $con->sql_query("update grn set by_account=$sessioninfo[id], account_amount=".mf($value).", acc_adjustment=account_amount, account_doc_no=".ms($form['account_doc_no'][$id]).", account_update=$uu, approved=$approved,require_store_confirm=$require_store_confirm where id=$id and branch_id=$branch_id");			// if fully approved, remove approver and GRN completed			if ($approved)			{				update_total_selling($id, $branch_id);				update_sku_item_cost($id,$branch_id);	            $con->sql_query("insert into branch_approval_history_items (approval_history_id, branch_id, user_id, status, log) values (".mi($form['approval_history_id'][$id]).", $branch_id, $sessioninfo[id], 1, 'Verified by account')");				$con->sql_query("update branch_approval_history set approvals = '' where id = ".mi($form['approval_history_id'][$id])." and branch_id = $branch_id");				//update sku_vendor table				update_sku_vendor_history($id, $branch_id);				// update po delivered count				if (isset($form['po_no'][$id]))				{					update_po_receiving_count($form['po_no'][$id]);					if($config['po_enable_ibt']){						update_sku_monitoring_group_items_changed($form['po_no'][$id], $branch_id, $id);					}				}			}		}	}	$printed = ($has_printed) ? "&printed=1" : '';	header("Location: $_SERVER[PHP_SELF]?t=verify&v=$v&c=$c&sc=$sc$printed");	exit;}function grn_repopulate_vendor_sku_history(){	global $con;		set_time_limit (0);			if($_REQUEST['branch_id']){		$grn_filter = "and grn_items.branch_id = ".mi($_REQUEST['branch_id']);		$vsh_filter = "and branch_id = ".mi($_REQUEST['branch_id']);	}	$result=$con->sql_query("select distinct grn_id as id, grn_items.branch_id from grn_items left join grn on grn.id = grn_id and grn.branch_id = grn_items.branch_id where selling_price>0 and cost>0 and grn.approved=1 $grn_filterorder by grn.added");	$con->sql_query("delete from vendor_sku_history where source='GRN' $vsh_filter");	while($r=$con->sql_fetchrow($result)){		print "<li> updating $r[id] $r[branch_id]\n";		update_sku_vendor_history($r['id'], $r['branch_id']);		print $con->sql_affectedrows();	}	print "Completed.";	exit;}function grn_reject($grn_id, $branch_id){	global $con, $sessioninfo,$smarty,$LANG,$config;	$form=$_REQUEST;	$con->sql_query("select date_format(added,'%Y-%m-%d') as added from grn where id=".mi($grn_id)." and branch_id=".mi($branch_id)) or die(mysql_error());	$grn_added = $con->sql_fetchfield(0);	if ($config['consignment_global_disable_documents_after_monthly_report'] && $config['consignment_modules'] && is_monthly_report_printed($grn_added,$branch_id)) {		$_REQUEST['a'] = 'confirm_detail';		$errm['top'][] = $LANG['CONSIGNMENT_MONTHLY_REPORT_ALREADY_PRINTED'];		$smarty->assign("errm", $errm);		grn_confirm_detail($grn_id, $branch_id);		exit;	}	$status=2;	$ah_id=intval($form['approval_history_id']);	$sz = ms($form['reject_comment']);	    $q1=$con->sql_query("select user_id from grn where id=$grn_id and branch_id=$branch_id");	$r1=$con->sql_fetchrow($q1);	//$to_user=$r1['user_id'];		$to_user = get_pm_recipient_list2($grn_id,$ah_id,$status,'approval',$branch_id,'grn');	send_pm2($to_user, sprintf("GRN Reject (GRN%05d)",$grn_id), "/goods_receiving_note.php?a=view&id=$grn_id&branch_id=$branch_id", array('module_name'=>'grn'));	$con->sql_query("insert into branch_approval_history_items (approval_history_id, branch_id, user_id, status, log) values ($ah_id, $branch_id, $sessioninfo[id], $status, $sz)");		$con->sql_query("update branch_approval_history set status=$status,approvals=NULL where id=$ah_id and branch_id=$branch_id");	$con->sql_query("update grn set by_account=0, status=0, authorized=0, approval_history_id=$ah_id where branch_id=$branch_id and id=$grn_id");		//update sku_item_cost	update_sku_item_cost($grn_id, $branch_id);	// update po received qty	if ($form['type']=='PO')		update_po_receiving_count($form['doc_no']);		header("Location: $_SERVER[PHP_SELF]?t=reject&id=$grn_id");	exit;}function grn_confirm_detail($grn_id, $branch_id){	global $con, $LANG, $smarty, $sessioninfo;	$form=load_grn_header($grn_id, $branch_id);		if(!$form){	    $smarty->assign("url", "/goods_receiving_note_approval.php");	    $smarty->assign("title", "GRN (Goods Receiving Note)");	    $smarty->assign("subject", sprintf($LANG['GRN_NOT_FOUND'], $grn_id));	    $smarty->display("redir.tpl");	    exit;	}	// if is verified grn, not allow to edit 	if($form['by_account']!=$sessioninfo['id'] && $form['status']==1 && $form['active']==1 && $form['approved']==1){	    grn_view_detail($grn_id, $branch_id);	    exit;	}	$form['items']=load_grn_items($grn_id, $branch_id, $form['po_items']);	$smarty->assign("form", $form);	$smarty->display("goods_receiving_note_approval.correction.tpl");		}function grn_view_detail($grn_id, $branch_id){	global $con, $LANG, $smarty;		$form=load_grn_header($grn_id, $branch_id);			if(!$form){	    $smarty->assign("url", "/goods_receiving_note_approval.php");	    $smarty->assign("title", "GRN (Goods Receiving Note)");	    $smarty->assign("subject", sprintf($LANG['GRN_NOT_FOUND'], $grn_id));	    $smarty->display("redir.tpl");	    exit;	}	$form['items']=load_grn_items($grn_id, $branch_id, $form['po_items']);	$smarty->assign("form", $form);	$smarty->display("goods_receiving_note_approval.view_detail.tpl");	}function get_amount_check(){	global $smarty, $LANG, $sessioninfo, $con, $config;	//if ($sessioninfo['level']<500)	//	$user_check = "";	//else		$user_check = "approvals like '%|$sessioninfo[id]|%' and ";	$filter[] = "$user_check approval_history_id and grn.approved=0 and grn.active=1 and grn.by_account=0 and grn.status=1";	if(!$config['consignment_modules'])	$filter[] = "grn.branch_id=".mi($sessioninfo['branch_id']);	$filter = "where ".join(' and ', $filter);		// check GRN	$sql = "select grn.*, user.u as grn_u, category.description as department, vendor.description as vendor, notify_users, approvals, approvals like '%|$sessioninfo[id]|%' as is_approval, grr.rcv_date, grr_items.doc_no, grr_items.type			from grn			left join user on grn.user_id = user.id			left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id			left join grr_items on (grn.grr_id = grr_items.grr_id and grn.grr_item_id = grr_items.id and grn.branch_id = grr_items.branch_id)			left join grr on (grr_items.grr_id = grr.id and grr_items.branch_id = grr.branch_id) left join category on grn.department_id = category.id			left join vendor on grn.vendor_id = vendor.id			$filter order by grn.added";	//print $sql;   	$q1 = $con->sql_query($sql);	while ($r=$con->sql_fetchrow($q1)){		if($config['use_grn_future']){			$sql2 = $con->sql_query("select group_concat(doc_no separator ', ') as doc_no, type, case when type = 'PO' then 1 when type = 'INVOICE' then 2 when type = 'DO' then 3 else 4 end as type_asc from grr_items where grr_id = ".ms($r['grr_id'])." and branch_id = ".ms($r['branch_id'])." group by type_asc order by type_asc ASC limit 1");				while($r2=$con->sql_fetchrow($sql2)){				$r['doc_no'] = $r2['doc_no'];				$r['type'] = $r2['type'];			}		}		$grn[] = $r;	} 	//add grn.active by gary to filter out the cancelled grn   	$smarty->assign("grn", $grn);   	$smarty->display("goods_receiving_note_approval.account.amount_check.tpl");}function find_grn(){    global $smarty, $LANG, $sessioninfo, $con, $config;		$str = $_REQUEST['search'];	$vendor_id = $_REQUEST['vendor_id'];	if(!$str && !$vendor_id) die('Cannot search empty string');	$where = array();	if($str){		$filter[] = '(grn.id = ' . mi($str) .' or grr_items.doc_no like '.ms("%$str%").')';	}		if($vendor_id){		$filter[] = "grn.vendor_id = ".mi($vendor_id);	}		$filter[] = "grn.status=1";	if(!$config['consignment_modules'])	$filter[] = "grn.branch_id=".mi($sessioninfo['branch_id']);	$filter = "where ".join(' and ', $filter);		$con->sql_query("select grn.*, user.u as grn_u, acc_user.u as acc_u, grr_items.doc_no, grr_items.type, category.description as department, vendor.description as vendor, notify_users, approvals, approvals like '%|$sessioninfo[id]|%' as is_approval, grr.rcv_date from grn left join user on grn.user_id = user.id left join user acc_user on by_account = acc_user.id left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id left join grr_items on (grn.grr_id = grr_items.grr_id and grn.grr_item_id = grr_items.id and grn.branch_id = grr_items.branch_id) left join grr on (grr_items.grr_id = grr.id and grr_items.branch_id = grr.branch_id) left join category on grn.department_id = category.id left join vendor on grn.vendor_id = vendor.id$filter order by grn.last_update, grn.id");	while ($r=$con->sql_fetchrow()){		if ($r['by_account']==0)			$amtcheck[] = $r;		elseif (!$r['active'])			$cancelled[] = $r;		elseif ($r['approved'])			$completed[] = $r;		else			$correction[] = $r;				}	unset($_REQUEST['s']);		if ($amtcheck){		$smarty->assign("grn", $amtcheck);		print "<h3>&nbsp; Amount Check</h3>";		$smarty->display("goods_receiving_note_approval.account.amount_check.tpl");	}	if ($correction){		$smarty->assign("grn", $correction);		print "<hr noshade size=1><h3 style=float:left>&nbsp; Pending GRN Correction </h3>";		$smarty->display("goods_receiving_note_approval.account.pending_correction.tpl");	}	if ($cancelled){		$smarty->assign("grn", $cancelled);		print "<hr noshade size=1><h3>&nbsp; Cancelled GRN</h3>";		$smarty->display("goods_receiving_note_approval.account.completed.tpl");	}	if ($completed){		$smarty->assign("grn", $completed);		print "<hr noshade size=1><h3 style=float:left>&nbsp; Verified GRN</h3>";		$smarty->display("goods_receiving_note_approval.account.completed.tpl");	}	if (!$amtcheck && !$correction && !$completed && !$cancelled){		print "<p align=center>- No Record-</p>";	}	/*	$results = $con->sql_fetchrowset();   	$smarty->assign("grn", $results);	// correct the list number	$_REQUEST['s'] = 0;   	if ($results[0]['require_store_confirm']==1)		$smarty->display("goods_receiving_note_approval.account.pending_correction.tpl");	else	    $smarty->display("goods_receiving_note_approval.account.completed.tpl");	*/}//add by gary to get cancel grn list.function get_cancel(){	global $smarty, $LANG, $sessioninfo, $con, $config;	if ($sessioninfo['level']<500)		//$user_check = "";	//else		$user_check = "and (flow_approvals like '%|$sessioninfo[id]|%' or notify_users like '%|$sessioninfo[id]|%')";	$start = intval($_REQUEST['s']);	if (isset($_REQUEST['sz']))		$sz = intval($_REQUEST['sz']);	else{		if (isset($config['document_page_size'])) $sz=$config['document_page_size'];			else	$sz = 25;	}    $con->sql_query("select count(*) from grn left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id where grn.branch_id = $sessioninfo[branch_id] $user_check and grn.by_account and grn.approved = 0 and grn.active and grn.require_store_confirm=1 and grn.status=1");	$r = $con->sql_fetchrow();	$total = $r[0];	if ($total > $sz){	    if ($start > $total) $start = 0;		// create pagination		$pg = "<b>Goto Page</b> <select onchange=\"list_sel(2,this.value)\">";		for ($i=0,$p=1;$i<$total;$i+=$sz,$p++){			$pg .= "<option value=$i";			if ($i == $start){				$pg .= " selected";			}			$pg .= ">$p</option>";		}		$pg .= "</select>";		$smarty->assign("pagination", "<div style=\"padding:4px;\">$pg</div>");	}    // check GRN waiting for store reconfirm    $con->sql_query("select grn.*, acc_user.u as acc_u, grr_items.doc_no, grr_items.type, category.description as department, vendor.description as vendor, grr.rcv_datefrom grnleft join user acc_user on by_account = acc_user.idleft join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_idleft join grr_items on (grn.grr_id = grr_items.grr_id and grn.grr_item_id = grr_items.id and grn.branch_id = grr_items.branch_id)left join grr on (grr_items.grr_id = grr.id and grr_items.branch_id = grr.branch_id) left join category on grn.department_id = category.idleft join vendor on grn.vendor_id = vendor.idwhere grn.branch_id = $sessioninfo[branch_id] $user_check and grn.active=0 and grn.require_store_confirm=1 and grn.status=1order by grn.added limit $start, $sz");	while($r_grn=$con->sql_fetchrow()){		$row_grn[]=$r_grn;	}	$smarty->assign("grn", $row_grn);	$smarty->display("goods_receiving_note_approval.account.completed.tpl");}function get_correction(){	global $smarty, $LANG, $sessioninfo, $con, $config;	if ($sessioninfo['level']<500)		//$user_check = "and grn.by_account <> 0";	//else		$user_check = "and (flow_approvals like '%|$sessioninfo[id]|%' or notify_users like '%|$sessioninfo[id]|%')";	$start = intval($_REQUEST['s']);	if (isset($_REQUEST['sz']))		$sz = intval($_REQUEST['sz']);	else{		if (isset($config['document_page_size'])) $sz=$config['document_page_size'];			else	$sz = 25;	}    $con->sql_query("select count(*) from grn left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id where grn.branch_id = $sessioninfo[branch_id] $user_check and grn.by_account and grn.approved = 0 and grn.active and grn.require_store_confirm=1 and grn.status=1"); 	//add grn.active by gary to filter out the cancelled grn	$r = $con->sql_fetchrow();	$total = $r[0];	if ($total > $sz){	    if ($start > $total) $start = 0;			// create pagination			$pg = "<b>Goto Page</b> <select onchange=\"list_sel(2,this.value)\">";		for ($i=0,$p=1;$i<$total;$i+=$sz,$p++){			$pg .= "<option value=$i";			if ($i == $start){				$pg .= " selected";			}			$pg .= ">$p</option>";		}		$pg .= "</select>";		$smarty->assign("pagination", "<div style=\"padding:4px;\">$pg</div>");	}    // check GRN waiting for store reconfirm    $sql = "select grn.*, acc_user.u as acc_u, grr_items.doc_no, grr_items.type, category.description as department, vendor.description as vendor, grr.rcv_date			from grn			left join user acc_user on by_account = acc_user.id			left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id			left join grr_items on (grn.grr_id = grr_items.grr_id and grn.grr_item_id = grr_items.id and grn.branch_id = grr_items.branch_id)			left join grr on (grr_items.grr_id = grr.id and grr_items.branch_id = grr.branch_id) 			left join category on grn.department_id = category.id			left join vendor on grn.vendor_id = vendor.id			where grn.branch_id = $sessioninfo[branch_id] $user_check and grn.approved=0 and grn.active and grn.require_store_confirm=1 and grn.status=1 			order by grn.added limit $start, $sz"; 	//add grn.active by gary to filter out the cancelled grn	$q1 = $con->sql_query($sql);	while ($r=$con->sql_fetchrow($q1)){		if($config['use_grn_future']){			$sql2 = $con->sql_query("select group_concat(doc_no separator ', ') as doc_no, type, case when type = 'PO' then 1 when type = 'INVOICE' then 2 when type = 'DO' then 3 else 4 end as type_asc from grr_items where grr_id = ".ms($r['grr_id'])." and branch_id = ".ms($r['branch_id'])." group by type_asc order by type_asc ASC limit 1");			while($r2=$con->sql_fetchrow($sql2)){				$r['doc_no'] = $r2['doc_no'];				$r['type'] = $r2['type'];			}		}		$row_grn[]=$r;	}		//echo"<pre>";print_r($row_grn);echo"</pre>";	$smarty->assign("grn", $row_grn);   	//$smarty->assign("grn", $con->sql_fetchrowset());	$smarty->display("goods_receiving_note_approval.account.pending_correction.tpl");}function get_completed(){	global $smarty, $LANG, $sessioninfo, $con, $config;	if ($sessioninfo['level']<500)		//$user_check = "";	//else		$user_check = "and (flow_approvals like '%|$sessioninfo[id]|%' or notify_users like '%|$sessioninfo[id]|%')";	$start = intval($_REQUEST['s']);	if (isset($_REQUEST['sz']))		$sz = intval($_REQUEST['sz']);	else{		if (isset($config['document_page_size'])) $sz=$config['document_page_size'];			else	$sz = 25;	}    $con->sql_query("select count(*) from grn left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id where grn.branch_id = $sessioninfo[branch_id] $user_check and grn.by_account and grn.approved and grn.active and grn.status=1");    //add grn.active by gary to filter out the cancelled grn	$r = $con->sql_fetchrow();	$total = $r[0];		if ($total > $sz){		if ($start > $total) $start = 0;		// create pagination		$pg = "<b>Goto Page</b> <select onchange=\"list_sel(3,this.value)\">";		for ($i=0,$p=1;$i<$total;$i+=$sz,$p++){			$pg .= "<option value=$i";			if ($i == $start) $pg .= " selected";			$pg .= ">$p</option>";		}		$pg .= "</select>";		$smarty->assign("pagination", "<div style=\"padding:4px;\">$pg</div>");	}   	$sql = "select grn.*, acc_user.u as acc_u, grr_items.doc_no, grr_items.type, category.description as department, vendor.description as vendor, grr.rcv_date from grn 			left join user acc_user on by_account = acc_user.id 			left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id 			left join grr_items on (grn.grr_id = grr_items.grr_id and grn.grr_item_id = grr_items.id and grn.branch_id = grr_items.branch_id) 			left join grr on (grr_items.grr_id = grr.id and grr_items.branch_id = grr.branch_id) left join category on grn.department_id = category.id 			left join vendor on grn.vendor_id = vendor.id 			where grn.branch_id = $sessioninfo[branch_id] $user_check and grn.approved and grn.active and grn.status=1 			order by grn.last_update desc limit $start, $sz";   	 //add grn.active by gary to filter out the cancelled grn	$q1 = $con->sql_query($sql);	while ($r=$con->sql_fetchrow($q1)){		if($config['use_grn_future']){			$sql2 = $con->sql_query("select group_concat(doc_no separator ', ') as doc_no, type, case when type = 'PO' then 1 when type = 'INVOICE' then 2 when type = 'DO' then 3 else 4 end as type_asc from grr_items where grr_id = ".ms($r['grr_id'])." and branch_id = ".ms($r['branch_id'])." group by type_asc order by type_asc ASC limit 1");			while($r2=$con->sql_fetchrow($sql2)){				$r['doc_no'] = $r2['doc_no'];				$r['type'] = $r2['type'];			}		}		$row_grn[]=$r;	}   	$smarty->assign("grn", $row_grn);   	$smarty->display("goods_receiving_note_approval.account.completed.tpl");}// update vendor_sku_history table with grn infofunction update_sku_vendor_history($grn_id, $branch_id){	global $con;	$con->sql_query("delete from vendor_sku_history where branch_id = $branch_id and source= 'GRN' and ref_id = $grn_id");  $sql = "select grn.branch_id, grn.vendor_id, sku_item_id, selling_price, if (acc_cost, acc_cost, cost)/fraction as cost_price, 'GRN' as source, grn.id as ref_id, artno_mcode as artno, grr.rcv_date as added, ifnull(grn_items.acc_ctn, grn_items.ctn) as ctn, ifnull(grn_items.acc_pcs, grn_items.pcs) as pcsfrom grn_items left join grn on grn_items.grn_id = grn.id and grn_items.branch_id = grn.branch_id left join grr on grr.id = grn.grr_id and grr.branch_id = grn.branch_idleft join uom on uom_id = uom.id where grn.id = $grn_id and grn.branch_id = $branch_id and selling_price > 0having cost_price > 0 and (ctn > 0 or pcs > 0)";  $q_1 = $con->sql_query($sql);  //die($sql);  while($r = $con->sql_fetchrow($q_1)){    $con->sql_query("insert into vendor_sku_history ".mysql_insert_by_field($r,array('branch_id', 'vendor_id', 'sku_item_id', 'selling_price', 'cost_price', 'source', 'ref_id', 'artno', 'added')));  }  $con->sql_freeresult($q_1);}?>