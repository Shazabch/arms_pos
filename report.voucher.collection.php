<?php/*4/8/2011 9:45:19 AM Alex- separate collection and payment in 2  report6/27/2011 10:06:08 AM Andy- Make all branch default sort by sequence, code.*/include("include/common.php");include("include/class.report.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");include("masterfile_voucher.include.php");class REPORT_VOUCHER_COLLECTION extends Module{     function __construct($title){        global $con, $smarty, $sessioninfo;		//default assign        if (!$_REQUEST['to_date']) $_REQUEST['to_date'] = date('Y-m-d');		if (!$_REQUEST['from_date']) $_REQUEST['from_date'] = date('Y-m-d', strtotime("-1 month"));		//Branches		$con->sql_query("select * from branch where active=1 order by sequence,code");		while($r = $con->sql_fetchrow()){			$branches[$r['id']] = $r;		}		ksort($branches);		$smarty->assign("branches", $branches);        $bid  = get_request_branch();        $this->bid=$bid;                $_REQUEST['branch_id']=$bid;       	$smarty->assign('form',$_REQUEST);    	parent::__construct($title);    }	function _default(){		$this->display();		exit;	}	function show_report(){		$this->generate_report();		$this->display();	}	function output_excel(){	    global $smarty, $sessioninfo;				$this->generate_report();        include_once("include/excelwriter.php");    	$smarty->assign('no_header_footer', true);    	$filename = "account_receivable_".time().".xls";    	log_br($sessioninfo['id'], 'REPORT_EXPORT', 0, "Export Voucher Account-receivable Report To Excel($filename)");    	Header('Content-Type: application/msexcel');		Header('Content-Disposition: attachment;filename='.$filename);		print ExcelWriter::GetHeader();		$this->display();		print ExcelWriter::GetFooter();	    exit;	}	function generate_report(){	    global $con, $smarty, $sessioninfo;		$form=$_REQUEST;        //$con_multi=new mysql_multi();        $con_multi = $con;		//================start filter===================		//branch		//if voucher is not own branch and used in own branch --> collect		$report_title[] = "Branch: ".get_branch_code($this->bid);		$filter[] = "pp.branch_id=$this->bid and mv.branch_id!=$this->bid";		//type voucher		$filter[] = "pp.type='Voucher'";		//date		$report_title[] = "Date: ".$form['from_date']." to ".$form['to_date'];		$from_date=ms($form['from_date']);		$to_date = ms($form['to_date']);        $filter[]= "pos.cancel_status=0";		$filter[]= "pp.date between $from_date and $to_date";				$smarty->assign('report_title', join("&nbsp;&nbsp;&nbsp;&nbsp;",$report_title));				if ($filter)    $where = "where ".join(" and ", $filter);				//==============end filter====================		$sql="select pp.branch_id as sales_branch, mv.branch_id as vou_branch, pp.*, mv.code as code			from pos_payment pp			left join mst_voucher mv on SUBSTRING(pp.remark,1,7) = mv.code and mv.cancel_status=0			left join pos on pp.branch_id=pos.branch_id and pp.counter_id=pos.counter_id and pp.pos_id=pos.id and pp.date=pos.date			$where			having code is not null			order by pp.date";		$con_multi->sql_query($sql);		if ($con_multi->sql_numrows()>0){			while($r=$con_multi->sql_fetchrow()){				$detail[$r['date']][$r['vou_branch']]['collect']+=$r['amount'];				$total[$r['vou_branch']]['collect']+=$r['amount'];			}		}				$smarty->assign('table', 1);				$smarty->assign('detail', $detail);		$smarty->assign('total', $total);	}}$report = new REPORT_VOUCHER_COLLECTION('Voucher Account-receivable Report');?>