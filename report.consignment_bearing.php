<?php/*9/14/2010 10:25:49 AM Alex- New Created11/8/2010 5:02:52 PM Alex- fix net sales figure bugs12/8/2010 3:16:15 PM Alex- change to 3 sections normal non-discoount, bearing, nett sales- fixed column width- summary details change x ->y and y -> x- summary column change color by price type, discount, nett sales- find limit of searching- add show all branches- make flexible: can show all brand, all department, all vendor- add show all price types in 1 page- add department, vendor or brand filter- add print function12/16/2010 5:04:39 PM Alex- sorting codes, discount and profit1/4/2011 2:29:40 PM Alex- change check cb_code to pos_items: trade_discount_code3/18/2011 3:34:39 PM Alex- fix output excel bugs6/24/2011 5:58:29 PM Andy- Make all branch default sort by sequence, code.7/4/2011 2:44:00 PM Alex- fix all branches figure bugs7/6/2011 6:10:19 PM Alex- add new table for showing pwp and gwp9/14/2011 2:42:26 PM Alex- add missing data of amount9/19/2011 4:34:08 PM Alex- fix get all vendor or brand only from consignment bearing9/23/2011 3:50:31 PM Alex- get brand or vendor from consignment sku items that select use brand / vendor table9/26/2011 10:39:35 AM Alex- change total selling nett sales selling and discount as default selling price and discount11/23/2011 6:30:45 PM Alex- add checking whether the discount is '%' or not before calculation11/30/2011 4:45:26 PM Alex- exclude goods return items in query12/5/2011 11:52:16 AM Alex- fix calculation of consignment bearing when goods return12/8/2011 12:15:42 PM Alex- get from temp data if found no department id, brand_id and vendor_id => generate_report()12/12/2011 11:18:27 AM Alex- hide column price type if no data- fix rowspan bugs12/14/2011 10:01:52 AM Alex- add amount data for details mode4/3/2013 2:35 PM Fithri- excluded all the non-sales branch from report (follow config)4/28/2014 11:51 AM Fithri- add option to filter out inactive SKU items6/18/2014 9:53 AM Fithri- report privilege & config checking is set to be the same as in menu (menu.tpl)2/20/2020 10:07 AM William- Enhanced to change connection "$con" to use report server connection "$con_multi".*/include("include/common.php");include("include/class.report.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");if (!privilege('REPORTS_SALES')) js_redirect(sprintf($LANG['NO_PRIVILEGE'], 'REPORTS_SALES', BRANCH_CODE), "/index.php");if (!$config['use_consignment_bearing']) js_redirect($LANG['REPORT_CONFIG_NOT_FOUND'], "/index.php");class REPORT_CONSIGNMENT_BEARING extends Module{	var $months = array(1=>'Jan',	2=>'Feb',	3=>'Mar',	4=>'Apr',	5=>'May',	6=>'Jun',	7=>'Jul',	8=>'Aug',	9=>'Sep',	10=>'Oct',	11=>'Nov',	12=>'Dec');		var $mprice_type = array('^pwp','^gwp');    function __construct($title){        global $con, $smarty, $sessioninfo, $con_multi, $appCore;		if(!$con_multi)	$con_multi = $appCore->reportManager->connectReportServer();		//default assign		//Branches		$con_multi->sql_query("select * from branch where active=1 order by sequence,code");		while($r = $con_multi->sql_fetchrow()){			$branches[$r['id']] = $r;			$this->branches[$r['id']]=$r['code'];		}		$con_multi->sql_freeresult();		$smarty->assign("branches", $branches);        $bid  = get_request_branch(true);        $this->bid=$bid;		//Month		$smarty->assign("months", $this->months);		//Year		$con_multi->sql_query("select year(min(date)) as min_year, year(max(date)) as max_year from pos having min_year > 0 order by max_year desc");		while ($r = $con_multi->sql_fetchrow()){            $min_year = $r['min_year'];            $max_year = $r['max_year'];		}		$con_multi->sql_freeresult();		$count_year = $max_year - $min_year;		for($i=0; $i<=$count_year; $i++){			$year[$i][0] = $min_year+$i;			$year[$i]['year'] = $min_year+$i;		}		$smarty->assign("years", $year);		//Discount Code		$con_multi->sql_query("select code as code_type from trade_discount_type group by code_type ");        $smarty->assign('code_type',$con_multi->sql_fetchrowset() );		$con_multi->sql_freeresult();       	$smarty->assign('form',$_REQUEST);    	parent::__construct($title);    }	function _default(){	    global $smarty, $sessioninfo;		$this->display();	}	function ajax_load_department(){		global $con, $con_multi;		//masterfile_consignment_bearing		$bid=$this->bid;        $filter[] = "cb.r_type <> 'none'";		if ($bid)	$filter[] = "cb.branch_id=$bid";		if ($filter)	$where = "where ".join(' and ', $filter);		$sql="select category.id, category.description  from consignment_bearing cb		    left join category on cb.dept_id=category.id			$where			group by cb.dept_id			";		$con_multi->sql_query($sql);				$rows=$con_multi->sql_numrows();		if ($rows>0){			if ($rows>1)    $out="<option value='All'>All</option>";			while($r=$con_multi->sql_fetchrow()){				$selected="";			    if ($_REQUEST['department_id'] == $r[id] ) $selected=" selected ";			    	            $out.="<option value='$r[id]' $selected>$r[description]</option>";			}		}else{            $out="<option value=''>No Data</option>";		}		$con_multi->sql_freeresult();				print $out;	}		function ajax_load_r_type_vendor_brand(){		global $con,$con_multi;		//masterfile_consignment_bearing		$bid=$this->bid;		$dept_id=$_REQUEST['dept_id'];		//		if ($bid)	$filter[] = "cb.branch_id=$bid";		if ($dept_id != "All") $filter[]="c.department_id=$dept_id";		$filter[]="sku.sku_type='CONSIGN'";		$filter[]="sku.trade_discount_type>0";		if ($filter)		$where = " where ".join(' and ',$filter);/*		$sql="select cb.r_type,			brand.id as brand_id,brand.description as brand_description,			vendor.id as vendor_id,vendor.description as vendor_description			from consignment_bearing cb		    left join brand on cb.brand_id=brand.id		    left join vendor on cb.vendor_id = vendor.id			$where";*/		$sql="select sku.trade_discount_type, brand.id as brand_id,brand.description as brand_description,			vendor.id as vendor_id,vendor.description as vendor_description			from sku 			left join category c on sku.category_id=c.id		    left join brand on sku.brand_id=brand.id		    left join vendor on sku.vendor_id = vendor.id			$where			group by sku.trade_discount_type,sku.brand_id,sku.vendor_id";	//print $sql;		$con_multi->sql_query($sql);		$rows=$con_multi->sql_numrows();		if ($rows>0){			while($r=$con_multi->sql_fetchassoc()){//				$r_type[$r['r_type']]=$r['r_type'];				if ($r['trade_discount_type']=='1' && $r['brand_id'])		$brand[$r['brand_id']] = $r['brand_description'];				if ($r['trade_discount_type']=='2' && $r['vendor_id'])		$vendor[$r['vendor_id']] = $r['vendor_description'];			}			$con_multi->sql_freeresult();			//r_type options/*			foreach ($r_type as $type){   				$selected_r="";			    if ($_REQUEST['r_type'] == $type) $selected_r=" selected ";	            $out['r_type'].="<option value='$type' $selected_r>".ucfirst($type)."</option>";			}*/			//brand options  			if ($brand){  				asort($brand);				if (count($brand)>1)  $out['brand']="<option value='All'>All</option>";				foreach ($brand as $brand_id=> $brand_description){	   				$selected_r="";				    if ($_REQUEST['brand_id'] == $brand_id) $selected_r=" selected ";	                $out['brand'].="<option value='$brand_id' $selected_r>".ucwords($brand_description)."</option>";				}			}else{   			    $out['brand']="<option value=''>No Data</option>";			}			//vendor options			if ($vendor){				asort($vendor);				if (count($vendor)>1)  $out['vendor']="<option value='All'>All</option>";				foreach ($vendor as $vendor_id=> $vendor_description){	   				$selected_r="";				    if ($_REQUEST['vendor_id'] == $vendor_id) $selected_r=" selected ";	                $out['vendor'].="<option value='$vendor_id' $selected_r>$vendor_description</option>";				}			}else{       			$out['vendor']="<option value=''>No Data</option>";			}		}else{//            $out['r_type']="<option value=''>No Data</option>";            $out['brand']="<option value=''>No Data</option>";            $out['vendor']="<option value=''>No Data</option>";		}		print json_encode($out);	}		function show_report(){        global $smarty;		//Checking Form		$err=$this->validate_data();	    if ($err){            $smarty->assign('err',$err);		}else{            $smarty->assign('this', $this);	        $template = "report.consignment_bearing.".$_REQUEST['show_by'].".tpl";			$this->generate_report();		    $report_cache = $smarty->fetch($template);			$smarty->assign('report_cache', $report_cache);		}		$this->display();	}	function validate_data(){		    $form=$_REQUEST;		if (!$form['department_id'])    $err[]= "Invalid department data.";		elseif ($form['department_id'] != 'All'){			if (!$form['r_type'])    $err[]= "Invalid type data.";		}		return $err;	}	function print_report(){        global $smarty;		//Checking Form        if (!$_REQUEST['show_by']){			$err = "Invalid show by which type";            $smarty->assign('err',$err);		}else{            $smarty->assign('this', $this);	        $template = "report.consignment_bearing.".$_REQUEST['show_by'].".tpl";			$this->generate_report();		    $report_cache = $smarty->fetch($template);			$smarty->assign('report_cache', $report_cache);		}		$this->display("report.consignment_bearing.print.tpl");	}	function output_excel(){	    global $smarty, $sessioninfo;				//Checking Form        if (!$_REQUEST['show_by']){			$err = "Invalid show by which type";            $smarty->assign('err',$err);		}else{            $smarty->assign('this', $this);	        $template = "report.consignment_bearing.".$_REQUEST['show_by'].".tpl";			$this->generate_report();		    $report_cache = $smarty->fetch($template);			$smarty->assign('report_cache', $report_cache);		}        include_once("include/excelwriter.php");    	$smarty->assign('no_header_footer', true);    	$filename = "report_consignment_bearing_".time().".xls";    	log_br($sessioninfo['id'], 'REPORT_EXPORT', 0, "Export Category Stock Analysis To Excel($filename)");    	Header('Content-Type: application/msexcel');		Header('Content-Disposition: attachment;filename='.$filename);		print ExcelWriter::GetHeader();		$this->display();		print ExcelWriter::GetFooter();	    exit;	}		function generate_report(){	    global $con, $smarty, $sessioninfo, $config, $con_multi;		$form=$_REQUEST;        //$con_multi=new mysql_multi();        //$con_multi = $con;        $table=false;		$bid=$this->bid;				if (!$bid)			$branch_code = "All";		else		    $branch_code = get_branch_code($bid);		$year=$form['year'];		$title[]="Branch: $branch_code";		$form['department_id']= $form['department_id'] ? $form['department_id'] : $form['tmp_department_id'];		$form['brand_id']= $form['brand_id'] ? $form['brand_id'] : $form['tmp_brand_id'];		$form['vendor_id']= $form['vendor_id'] ? $form['vendor_id'] : $form['tmp_vendor_id'];		//department		if ($form['department_id'] == 'All') $title[]="Department: All";		else{			$sql_dept="select * from category where id=".mi($form['department_id']);			$r_dept=$con_multi->sql_query($sql_dept);			$s_dept=$con_multi->sql_fetchrow($r_dept);			$con_multi->sql_freeresult($r_dept);			$title[]="Department: $s_dept[description]";		}		if ($form['r_type'] == 'All') $title[]="Type: All";		elseif ($form['r_type'] == 'brand'){		//brand		    if ($form['brand_id'] == 'All') $title[]="Brand: All";			else{				$sql_brand="select * from brand where id=".mi($form['brand_id']);				$r_brand=$con_multi->sql_query($sql_brand);				$s_brand=$con_multi->sql_fetchrow($r_brand);				$con_multi->sql_freeresult($r_brand);				$title[]="Brand: $s_brand[description]";			}		}elseif ($form['r_type'] == 'vendor'){		//vendor		    if ($form['vendor_id'] == 'All') $title[]="Vendor: All";			else{				$sql_vendor="select * from vendor where id=".mi($form['vendor_id']);				$r_vendor=$con_multi->sql_query($sql_vendor);				$s_vendor=$con_multi->sql_fetchrow($r_vendor);				$con_multi->sql_freeresult($r_vendor);				$title[]="Vendor: $s_vendor[description]";			}		}		$title[]="Year: ".$year;   		$months = array(1=>'January',	2=>'Febrary',	3=>'March',	4=>'April',	5=>'May',	6=>'June',	7=>'July',	8=>'August',	9=>'September',	10=>'October',	11=>'November',	12=>'December');   				//if 1 month only		if ($form['month'] != 'All' ){			$title[]="Month: ".$months[$form['month']];	     	$days=days_of_month($form['month'], $year);			$month=str_pad($form['month'],2,"0",STR_PAD_LEFT);		    $from_date=ms($year."-".$month."-01" );		    $to_date=ms($year."-".$month."-".$days);			for ($i=1;$i<=$days;$i++){				$date[$i]="$year-$month-".str_pad($i,2,"0",STR_PAD_LEFT);			}		}else{		//select whole year		    $title[]="Month: All";            		    $from_date=ms($year."-1-01" );		    $to_date=ms($year."-12-31");			$date=$months;		}		//show type		if ($form['show_by'] == 'details') $title[]="Show by price type: ".$form['code_type'];		else $title[]= "Show by: Summary";		//change column date to branches		if ($form['branch_id'] == 'All'){		    //all branch			$date=$this->branches;			$extrasql="pos.branch_id as date,";   //replace month column as branches			$branches_arr=$this->branches;		}else{		    //single branch			$extrasql="pos.date as date,";			$branches_arr[$bid]=$bid;		}		$smarty->assign('date',$date);		$report_title=join('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;', $title);    	$smarty->assign('report_title',$report_title);		unset($bid);				if ($config['sales_report_branches_exclude']) {			foreach ($branches_arr as $k => $b) {				if (in_array($b,$config['sales_report_branches_exclude'])) {					unset($branches_arr[$k]);				}			}		}				/*		echo '<pre>';		print_r($branches_arr);		echo '</pre>';		*/				foreach ($branches_arr as $bid => $dummy){						$filter[]= "pos.branch_id=$bid";			$filter_con[]= "cb.branch_id=$bid";				//start filtering............................			$filter[]= "pos.date between $from_date and $to_date";	        $filter[]= "pos.cancel_status=0";  	        			$filter[]= "sku_type='CONSIGN'";							if ($form['show_by'] == 'details' && $form['code_type'] != 'All'){				$filter[]=" pi.trade_discount_code=".ms($form['code_type']);			}						//department			if (intval($form['department_id'])>0){				$filter[] = "c.department_id = ".mi($form['department_id']);//				$filter_con[] = "cb.dept_id = $form[department_id]";								//r_type				if ($form['r_type'] == "vendor"){					$filter[] = "sku.trade_discount_type=2";					if (intval($form['vendor_id'])>0){						$filter[] = "sku.vendor_id=".mi($form['vendor_id']);//						$filter_con[] = "cb.vendor_id = $form[vendor_id]";					}else{//						$filter_con[] = "cb.vendor_id > 0";					}				}elseif ($form['r_type'] == "brand"){					$filter[] = "sku.trade_discount_type=1";		            if (intval($form['brand_id'])>0){						$filter[] = "sku.brand_id=".intval($form['brand_id']);//						$filter_con[] = "cb.brand_id = $form[brand_id]";		            }else{//						$filter_con[] = "cb.brand_id > 0";					}				}elseif ($form['r_type'] == "none"){//					$filter_con[] = "cb.vendor_id = 0";//					$filter_con[] = "cb.brand_id = 0";				}			}			$filter[] = $_REQUEST['exclude_inactive_sku'] ? '(si.active=1 or pi.sku_item_id=0)' : '1';/*				if ($filter_con)	$where_con= " where ".join(' and ',$filter_con);			unset($filter_con);			$cons_sql="select * from consignment_bearing cb $where_con group by dept_id,brand_id,vendor_id";			$con->sql_query($cons_sql);			if ($con->sql_numrows()<=0){				unset($filter);				continue;			}				while ($cons = $con->sql_fetchassoc()){				$filter_and[] = "c.department_id = $cons[dept_id]";				if ($cons['brand_id'])	$filter_and[] = "sku.brand_id = $cons[brand_id]";				if ($cons['vendor_id'])	$filter_and[] = "sku.vendor_id = $cons[vendor_id]";				$filter_or[] = "(".join(" and ", $filter_and).")";				unset($filter_and);			}			$con->sql_freeresult();			if ($filter_or) 	$filter[] = "(".join(" or ", $filter_or).")";			unset($filter_or);*/			$where = join(' and ', $filter);			unset($filter, $filter_con, $skip_cons_sql);				//for net sales (price-discount)  | price --> selling			//(price-(price * cb_profit / 100 )) -->cost			//for net sales profit = selling * net_sales / 100 | selling - cost			// sup_bear = (discount * (100 - cb_net_bearing) / 100)			//Start Calculations						$cb_discount_filter="if(pi.qty<0,pgri.cb_discount,pi.cb_discount)";			$cb_profit_filter="if(pi.qty<0,pgri.cb_profit,pi.cb_profit)";						$cb_use_net_filter="if(pi.qty<0,pgri.cb_use_net,pi.cb_use_net)";			$cb_net_bearing_filter="if(pi.qty<0,pgri.cb_net_bearing,pi.cb_net_bearing)";			$trade_discount_code_filter="if(pi.qty<0,pgri.trade_discount_code,pi.trade_discount_code)";						$sql="select			if($cb_use_net_filter='yes',sum(if(pi.qty<0,(pgri.price-pgri.discount)*-1,pi.price-pi.discount)),sum(if(pi.qty<0,pgri.price*-1,pi.price))) as amount,			sum(if(pi.qty<0,pgri.price*-1,pi.price)) as nett_amount,			if($cb_use_net_filter='yes',sum(if(pi.qty<0,((pgri.price-pgri.discount) * (100 - pgri.cb_net_bearing) / 100)*-1 ,(pi.price-pi.discount) * (100 - pi.cb_net_bearing) / 100 )),0) as nett_cost,			if($cb_use_net_filter='no',				sum(if(pi.qty<0,(pgri.price * pgri.cb_profit / 100)*-1, pi.price * pi.cb_profit / 100)), 				sum(if(pi.qty<0,((pgri.price-pgri.discount) * pgri.cb_net_bearing / 100)*-1, (pi.price-pi.discount) * pi.cb_net_bearing / 100))) as profit,			if($cb_use_net_filter='no',				sum(if(pi.qty<0,(pgri.discount * (100 - pgri.cb_net_bearing) / 100 )*-1,pi.discount * (100 - pi.cb_net_bearing) / 100 )),				0) as sup_bear,				sum(if(pi.qty<0,pgri.discount*-1,pi.discount)) as disc,			if($cb_use_net_filter='yes',sum(if(pi.qty<0,pgri.price*-1,pi.price)),0) as am_amount,			if($cb_use_net_filter='yes',sum(if(pi.qty<0,pgri.discount*-1,pi.discount)),0) as am_disc,			if($cb_use_net_filter='no',concat(100 - $cb_net_bearing_filter,'%'),0) as sup_bear_p,						$extrasql						$trade_discount_code_filter as cb_code, 			$cb_discount_filter as cb_discount, 			$cb_use_net_filter as cb_use_net,			$cb_net_bearing_filter as net_sales_p,			concat($cb_net_bearing_filter,'%') as cb_net_bearing,			$cb_profit_filter as profit_p,						pi.mprice_type,			pi.sku_item_id, si.sku_item_code, si.receipt_description,sum(pi.qty) as qty,			(replace(pi.cb_discount,'%','')*1) as sort_disc			from pos_items pi			left join pos on pi.pos_id=pos.id and pi.branch_id=pos.branch_id and pi.counter_id=pos.counter_id and pi.date=pos.date			left join pos_goods_return pgr on pgr.branch_id=pos.branch_id and pgr.pos_id=pos.id and pgr.item_id=pi.item_id and pgr.date=pos.date and pgr.counter_id = pos.counter_id			left join pos pgrp on pgrp.id=pgr.return_pos_id and pgr.branch_id=pgrp.branch_id and pgrp.counter_id=pgr.return_counter_id and pgrp.date=pgr.return_date and pgrp.cancel_status=0			left join pos_items pgri on pgri.branch_id=pgrp.branch_id and pgri.pos_id=pgrp.id and pgri.date=pgrp.date and pgri.counter_id = pgrp.counter_id and pgri.item_id=pgr.return_item_id			left join branch on pi.branch_id=branch.id			left join sku_items si on pi.sku_item_id=si.id			left join sku on si.sku_id=sku.id			left join category c on sku.category_id=c.id			where $where			group by pi.date, cb_code, cb_discount, cb_use_net, cb_net_bearing, pi.mprice_type, pi.sku_item_id			order by sort_disc,net_sales_p";			//print $sql;			$con_multi->sql_query($sql);				if($con_multi->sql_numrows()>0 ){				$table=true;								while($r=$con_multi->sql_fetchassoc()){					$code_detail[$r['cb_code']] = $r['cb_code'];				    $col[$r['cb_code']]=1;										if ($form['branch_id'] != 'All'){						if ($form['month'] == "All"){							$r['date']=date("n",strtotime($r['date']));					    }else{							$r['date']=date("j",strtotime($r['date']));						}					}					//for sorting use					$cb_net_bearing=str_replace('%','',$r['cb_net_bearing']);					$cb_discount=str_replace('%','',$r['cb_discount']);//					$r['mprice_type']="a".$r['mprice_type'];;					if (preg_match("/".join("|",$this->mprice_type)."/", $r['mprice_type'], $matches)){						//match mprice type						$matches_data=$matches[0];						if ($matches_data == "pwp" || $matches_data == "gwp")	$matches_data=strtoupper($matches_data);						else	$matches_data=ucfirst($matches_data);						if ($form['show_by'] == 'details'){						}else{							if ($matches_data!='GWP'){							    $head_mprice[$matches_data] = $matches_data;										$mprice[$r['date']][$matches_data]['nett_sales']+= $r['amount'];										$mprice_total[$matches_data]['nett_sales']+= $r['amount'];							}														//bottom summary		                    $mprice_c[$matches_data][$r['sku_item_id']][$r['sup_bear']]['qty']+=$r['qty'];		                    $mprice_c[$matches_data][$r['sku_item_id']][$r['sup_bear']]['selling']+=$r['amount'];		                    $mprice_c[$matches_data][$r['sku_item_id']][$r['sup_bear']]['sup_bear']+=$r['sup_bear'];							if (!$s_mprice_head[$matches_data][$r['sku_item_id']][$r['sup_bear']]){								$s_mprice_head[$matches_data][$r['sku_item_id']][$r['sup_bear']]=$r['sup_bear'];								$mprice_sales_row[$matches_data][$r['sku_item_id']]['rowspan']+=1;								$mprice_sales_row[$matches_data][$r['sku_item_id']]['sku_item_code']=$r['sku_item_code'];								$mprice_sales_row[$matches_data][$r['sku_item_id']]['description']=$r['receipt_description'];									}//							$s_mprice_total[$r['cb_code']][$r['cb_net_bearing']]['profit']+= $r['profit'];//							$s_mprice_total[$r['cb_code']][$r['cb_net_bearing']]['nett_sales']+= $r['amount'];						}					}elseif ($r['cb_use_net'] == 'yes'){					    //nett sales & Amount						if ($form['show_by'] == 'details'){							//DETAILS MODE							if (!strpos($r['cb_discount'],'%')){								//Amount								$head_amount[$r['cb_code']]['promo']= 1;								$amount[$r['date']][$r['cb_code']]['disc']['cost'] += $r['nett_cost'];								$amount[$r['date']][$r['cb_code']]['disc']['nett_sales'] += $r['amount'];								$amount_total[$r['cb_code']]['cost']+= $r['nett_cost'];								$amount_total[$r['cb_code']]['nett_sales']+= $r['amount'];							}else{								//Nett Sales							    $head_nett[$r['cb_code']]['promo'][$r['cb_discount']] = $r['cb_discount'];										$nett[$r['date']][$r['cb_code']]['disc'][$r['cb_discount']]['cost']+= $r['nett_cost'];								$nett[$r['date']][$r['cb_code']]['disc'][$r['cb_discount']]['nett_sales']+= $r['amount'];									$nett_total[$r['cb_code']][$r['cb_discount']]['cost']+= $r['nett_cost'];								$nett_total[$r['cb_code']][$r['cb_discount']]['nett_sales']+= $r['amount'];							}						}else{							//SUMMARY MODE							if (!strpos($r['cb_discount'],'%')){								//Amount														    $head_amount[$cb_net_bearing] = $r['cb_net_bearing'];							    //								$amount[$r['date']]['disc'][$r['cb_net_bearing']]['cost']+= $r['nett_cost'];//								$amount[$r['date']]['disc'][$r['cb_net_bearing']]['nett_sales']+= $r['amount'];								$amount[$r['date']]['disc']['cost'] += $r['nett_cost'];								$amount[$r['date']]['disc']['nett_sales'] += $r['amount'];//								$amount_total[$r['cb_net_bearing']]['cost']+= $r['nett_cost'];//								$amount_total[$r['cb_net_bearing']]['nett_sales']+= $r['amount'];								$amount_total['cost']+= $r['nett_cost'];								$amount_total['nett_sales']+= $r['amount'];								//bottom summary			                    $amount_c[$r['cb_code']][$r['cb_net_bearing']]['selling']+=$r['am_amount'];			                    $amount_c[$r['cb_code']][$r['cb_net_bearing']]['disc']+=$r['am_disc'];			                    $amount_c[$r['cb_code']][$r['cb_net_bearing']]['profit']+=$r['profit'];			                    $amount_c[$r['cb_code']][$r['cb_net_bearing']]['profit_p']=$r['net_sales_p'];			                    $amount_c[$r['cb_code']][$r['cb_net_bearing']]['sup_bear']+=$r['sup_bear'];										if (!$s_amount_head[$r['cb_code']][$cb_net_bearing]){									$s_amount_head[$r['cb_code']][$cb_net_bearing]=$r['cb_net_bearing'];											//set column rowspan									$amount_sales_row[$r['cb_code']]+=1;								}		//								$s_amount_total[$r['cb_code']][$r['cb_net_bearing']]['profit']+= $r['profit'];//								$s_amount_total[$r['cb_code']][$r['cb_net_bearing']]['nett_sales']+= $r['amount'];							}else{								//Nett Sales								//top summary							    $head_nett[$cb_discount] = $r['cb_discount'];										$nett[$r['date']]['disc'][$r['cb_discount']]['cost']+= $r['nett_cost'];								$nett[$r['date']]['disc'][$r['cb_discount']]['nett_sales']+= $r['amount'];										$nett_total[$r['cb_discount']]['cost']+= $r['nett_cost'];								$nett_total[$r['cb_discount']]['nett_sales']+= $r['amount'];										//bottom summary			                    $nett_c[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']]['selling']+=$r['nett_amount'];			                    $nett_c[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']]['disc']+=$r['disc'];			                    $nett_c[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']]['profit']+=$r['profit'];			                    $nett_c[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']]['profit_p']=$r['net_sales_p'];			                    $nett_c[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']]['sup_bear']+=$r['sup_bear'];								if (!isset($s_nett_head[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']])){									$s_nett_head[$r['cb_code']][$r['cb_discount']][$r['net_sales_p']]=$r['net_sales_p'];											//set column rowspan									$nett_sales_row[$r['cb_code']]+=1;								}		//								$s_nett_total[$r['cb_code']][$r['cb_net_bearing']]['profit']+= $r['profit'];//								$s_nett_total[$r['cb_code']][$r['cb_net_bearing']]['nett_sales']+= $r['amount'];							}						}					}else{					    //Bearing							if ($form['show_by'] == 'details'){							//DETAILS MODE								if (!$r['cb_discount'])	{						        //no promotion							    $r['cb_discount']="[Other]";							    $head_not_nett[$r['cb_code']]['non_promo'][$r['cb_discount']]=$r['cb_discount'];									$not_nett[$r['date']][$r['cb_code']]['np_selling']+=$r['amount'];								$not_nett_total[$r['cb_code']]['np_selling']+=$r['amount'];								}else{								//promo							    $head_not_nett[$r['cb_code']]['promo'][$cb_discount]=$r['cb_discount'];									$not_nett[$r['date']][$r['cb_code']]['selling']+=$r['amount'];								$not_nett_total[$r['cb_code']]['selling']+=$r['amount'];							}			                    $not_nett[$r['date']][$r['cb_code']]['disc'][$r['cb_discount']]['discount']+=$r['disc'];			                    $not_nett_total[$r['cb_code']][$r['cb_discount']]['discount']+=$r['disc'];						}else{							//SUMMARY MODE						        $cb_code = $r['cb_code'];							if	(!$r['cb_discount']){						        //no promotion settings								$r['cb_code'] = "Non-Promo";							    $r['cb_discount']="[Other]";							    $cb_discount="[Other]";							    $r['sup_bear_p']="0%";							    $r['sup_bear'] = 0;							}														//top summary										if ($r['disc']!=0)	$head_not_nett[$cb_discount]=$r['cb_discount'];							$head_not_nett_code[$r['cb_code']]=$r['cb_code'];				            $not_nett[$r['date']][$r['cb_code']]['selling']+=$r['amount'];							$not_nett_total[$r['cb_code']]['selling']+=$r['amount'];		                    $not_nett_total[$r['cb_discount']]['discount']+=$r['disc'];			                $not_nett[$r['date']]['disc'][$r['cb_discount']]['discount']+=$r['disc'];							//bottom summary		                    $not_nett_c[$cb_code][$r['cb_discount']][$r['sup_bear_p']]['selling']+=$r['amount'];		                    $not_nett_c[$cb_code][$r['cb_discount']][$r['sup_bear_p']]['disc']+=$r['disc'];		                    $not_nett_c[$cb_code][$r['cb_discount']][$r['sup_bear_p']]['profit']+=$r['profit'];		                    $not_nett_c[$cb_code][$r['cb_discount']][$r['sup_bear_p']]['profit_p']=$r['profit_p'];		                    $not_nett_c[$cb_code][$r['cb_discount']][$r['sup_bear_p']]['sup_bear']+=$r['sup_bear'];								if (!$s_not_nett_head[$r['cb_code']][$r['cb_discount']][$r['sup_bear_p']]){								$s_not_nett_head[$r['cb_code']][$r['cb_discount']][$r['sup_bear_p']]=$r['sup_bear_p'];									//set column rowspan								$bearing_row[$r['cb_code']]+=1;							}	//							$s_not_nett_total[$r['cb_code']]['profit']+=$r['profit'];//							$s_not_nett_total[$r['cb_code']]['discount']+=$r['disc'];//							$s_not_nett_total[$r['cb_code']]['sup_bear']+=$r['sup_bear'];						}					}						$code_summary[$r['cb_code']] = $r['cb_code'];				}			}			$con_multi->sql_freeresult();		}			//------------------sorting in two modes		if ($form['show_by'] == 'details'){			//DETAILS MODE			if ($head_nett){				foreach ($head_nett as $code => $dummy){					ksort($head_nett[$code]['promo']);				}			}			if ($head_not_nett){				foreach ($head_not_nett as $code => $dummy){					if ($head_not_nett[$code]['promo']) ksort($head_not_nett[$code]['promo']);				}			}		}else{			//SUMMARY MODE			if ($head_nett) ksort($head_nett);            			if ($head_not_nett['[Other]']){				unset($head_not_nett['[Other]']);		        $head_not_nett[-1]='[Other]';    		}			  	            if ($s_nett_head){				foreach ($s_nett_head as $code => $dummy){					ksort($s_nett_head[$code]);				}			}						if ($head_amount) ksort($head_amount);			if ($s_amount_head){				foreach ($s_amount_head as $code => $dummy){					ksort($s_amount_head[$code]);				}			}            //sort bearing			if ($s_not_nett_head){				foreach ($s_not_nett_head as $code=>$dis_bear){					foreach ($dis_bear as $discount => $bearing){						if ($bearing['100%']){							unset($s_not_nett_head[$code][$discount]['100%']);							$s_not_nett_head[$code][$discount]['a']='100%';						}						ksort($s_not_nett_head[$code][$discount]);					}				}			}		}				if ($code_summary['Non-Promo']){			unset($code_summary['Non-Promo']);            $code_summary[-1]='Non-Promo';		}		if ($head_not_nett_code['Non-Promo']){			unset($head_not_nett_code['Non-Promo']);			$head_not_nett_code[-1]='Non-Promo';		}				if ($head_not_nett_code) ksort($head_not_nett_code);		if ($code_summary) ksort($code_summary);		if ($code_detail) ksort($code_detail);		if ($head_not_nett) ksort($head_not_nett);		if ($amount_sales_row) ksort($amount_sales_row);		//count column span		if ($s_nett_head){			foreach($s_nett_head as $c => $net_bear){			    $col[$c]=count($net_bear)+1;			}		}		if ($s_amount_head){			foreach($s_amount_head as $d => $amount_bear){			    $col[$d]=count($amount_bear)+1;			}		}		//------------------end sorting//		print_r($col);		if ($form['show_by'] != 'details'){			$h_code=$code_summary;			$smarty->assign('h_code',$h_code);			$smarty->assign('nett_c',$nett_c);			$smarty->assign('s_nett_head',$s_nett_head);			$smarty->assign('nett_sales_row',$nett_sales_row);//			$smarty->assign('s_nett_total',$s_nett_total);			$smarty->assign('amount_c',$amount_c);			$smarty->assign('s_amount_head',$s_amount_head);			$smarty->assign('amount_sales_row',$amount_sales_row);//			$smarty->assign('s_amount_total',$s_amount_total);			$smarty->assign('head_not_nett_code',$head_not_nett_code);			$smarty->assign('not_nett_c',$not_nett_c);			$smarty->assign('s_not_nett_head',$s_not_nett_head);	 		$smarty->assign('bearing_row',$bearing_row);//			$smarty->assign('s_not_nett_total',$s_not_nett_total);			$smarty->assign('mprice_c',$mprice_c);			$smarty->assign('s_mprice_head',$s_mprice_head);			$smarty->assign('mprice_sales_row',$mprice_sales_row);		}		$code=$code_detail;		$smarty->assign('code',$code);		$smarty->assign('col',$col);		//Nett Sales		$smarty->assign('head_nett',$head_nett);		$smarty->assign('nett',$nett);		$smarty->assign('nett_total',$nett_total);		//amount		$smarty->assign('head_amount',$head_amount);		$smarty->assign('amount',$amount);		$smarty->assign('amount_total',$amount_total);		//Bearing		$smarty->assign('head_not_nett',$head_not_nett);		$smarty->assign('not_nett',$not_nett);		$smarty->assign('not_nett_total',$not_nett_total);		//mprice		$smarty->assign('head_mprice',$head_mprice);		$smarty->assign('mprice',$mprice);		$smarty->assign('mprice_total',$mprice_total);		$smarty->assign('table',$table);				unset($h_code, $nett_c, $s_nett_head, $s_nett_total, $s_not_nett_head, $not_nett_c, $s_not_nett_total, $code, $col, $head_nett, $nett, $nett_total, $nett_sales_row, $not_nett, $not_nett_total, $bearing_row, $table);	}	//Ajax Called Function}$report = new REPORT_CONSIGNMENT_BEARING('Consignment Bearing Report');?>