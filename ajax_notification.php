<?php/*6/26/2015 6:26 PM Andy- Fix SKU Approval cannot show.10/14/2015 9:59 AM Andy- Enhance to load CNote approval.10/21/2015 3:35 PM DingRen- load SKU Application notification from HQ if not running single server mode11/12/2015 10:26 AM Justin- Bug fixed on GRR status did not filter inactive GRR correctly.5/13/2016 1:35 PM Andy- Fix DO Request notification to filter user department.6/30/2017 16:40 Qiu Ying- Bug fixed on showing wrong GRN approval list when the approval flow is follow sequence 5/21/2019 3:38 PM William- Pickup report_prefix for enhance "GRN".7/11/2019 5:06 PM Andy- Added Cycle Count Approval.9/17/2019 10:30 AM Andy- Change NEW SKU Notification is able to view by system admin level and no need filter by department.*/	include("include/common.php");	switch($_REQUEST['a'])	{		case 'ajax_get_bpc':			ajax_get_bpc();			exit;		case 'ajax_left_sidebar':			ajax_left_sidebar();			exit;		case 'ajax_right_sidebar':			ajax_right_sidebar();			exit;		default:			print "<ul>";	        print "<li>Unhandled Request<span class=informal>";			print_r($_REQUEST);			print "</span></li>";	        print "</ul>";	        exit;	}	// function ajax_get_bpc(){	// 	global $con, $sessioninfo, $smarty;			// 	if(BRANCH_CODE != "HQ") $filter = "and sifp.branch_id = ".mi($sessioninfo['branch_id']);			// 	$ret = array();	// 	$sql = $con->sql_query("select sifp.*, u.u as username, bah.approvals	// 							from sku_items_future_price sifp	// 							left join user u on u.id = sifp.user_id	// 							left join branch_approval_history bah on bah.id = sifp.approval_history_id and bah.branch_id = sifp.branch_id	// 							where sifp.active=1 and sifp.status=1 and sifp.approved=1 and sifp.cron_status = 0 $filter	// 							order by sifp.last_update desc limit 100");	// 	while($r = $con->sql_fetchassoc($sql)){	// 		$ret['ok'] = 1;	// 		if(BRANCH_CODE == "HQ") $extra_info = " [".get_branch_code($r['branch_id'])."]";	// 		$ret['html'] .= "<div style=\"border-bottom:1px solid #eee\"> 	// 						<font color=\"#666666\">	// 						<a href=\"/masterfile_sku_items.future_price.php?a=view&id=".mi($r['id'])."&branch_id=".mi($r['branch_id'])."\" target=\"_blank\">#".str_pad($r['id'], 5, "0", STR_PAD_LEFT).$extra_info."</a><br />	// 						</font><font class=\"small\">	// 						Created: <font color=\"blue\">".$r['added']."</font><br>	// 						Last Updated: <font color=\"blue\">".$r['last_update']."</font>	// 						<br>	// 						</font>	// 						</div>";	// 	}			// 	print json_encode($ret);	// }	function ajax_left_sidebar(){		global $con, $sessioninfo, $smarty, $config;				if (privilege('NT_MEMBERSHIP_VERIFY'))		{			// check notifications and run			$result = $con->sql_query("select count(*) as count, apply_branch_id as branch_id, branch.code as branch_code from (membership left join branch on membership.apply_branch_id = branch.id) where verified_by = 0 and blocked_by = 0 and terminated_date = 0 and apply_branch_id in (select branch_id from user_privilege where privilege_code = 'NT_MEMBERSHIP_VERIFY' and allowed and user_id = $sessioninfo[id]) group by apply_branch_id order by branch.sequence,branch.code");			$membership = array();			while($r = $con->sql_fetchassoc($result)){				$membership[] = $r;			};			$con->sql_freeresult($result);						$smarty->assign("membership", $membership);		}		if (privilege('MEMBERSHIP_BLOCK'))		{			// check notifications and run			$result = $con->sql_query("select count(*) as count, apply_branch_id as branch_id, branch.code as branch_code from (membership left join branch on membership.apply_branch_id = branch.id) where verified_by = 0 and blocked_by > 0 and terminated_date = 0 and apply_branch_id in (select branch_id from user_privilege where privilege_code = 'MEMBERSHIP_BLOCK' and allowed and user_id = $sessioninfo[id]) group by apply_branch_id");			$membership_blocked = array();			while($r = $con->sql_fetchassoc($result)){				$membership_blocked[] = $r;			};			$con->sql_freeresult($result);						$smarty->assign("membership_blocked", $membership_blocked);		}		if (privilege('MEMBERSHIP_SUMM'))		{		    $branch_check = "";		    if(BRANCH_CODE!='HQ')   $branch_check = "where apply_branch_id=".mi($sessioninfo['branch_id']);		    $result = $con->sql_query("select if(verified_by>0,1,0) as verified,if(blocked_by>0,1,0) as blocked, if(terminated_date>0,1,0) as terminate from membership $branch_check");		    while($r = $con->sql_fetchrow($result)){		        if($r['terminate']) $status = 'terminated';		        elseif($r['blocked']) $status = 'blocked';		        elseif($r['verified']) $status = 'verified';		        else $status = 'unverified';				$membership_summary[$status]++;				$membership_summary['total']++;			}			$con->sql_freeresult($result);			$smarty->assign("membership_summary", $membership_summary);			unset($r,$membership_summary);		}		if($config['membership_redemption_use_enhanced'])		{			// check notifications and run			$filter = '';			if(BRANCH_CODE != "HQ") $filter = "and mr.branch_id = ".ms($sessioninfo['branch_id']);			$result = $con->sql_query("select count(*) as count, mr.branch_id, branch.code as branch_code									   from membership_redemption mr									   left join branch_approval_history bah on mr.approval_history_id = bah.id and mr.branch_id = bah.branch_id									   left join branch on mr.branch_id = branch.id									   where mr.verified = 0 and mr.status = 0 and									   ((bah.approvals like '|$sessioninfo[id]|%' and bah.approval_order_id=1) or (bah.approvals like '%|$sessioninfo[id]|%' and bah.approval_order_id in (2,3)))									   $filter									   group by mr.branch_id									   order by branch.sequence,branch.code");			$smarty->assign("membership_redemption", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('MEMBERSHIP_ITEM_CFRM'))		{			// check notifications and run			$result=$con->sql_query("select count(*) as count, branch.id as branch_id, branch.code as branch_code,								 	if(mrs.valid_date_to != '' and mrs.valid_date_to != '0000-00-00', datediff(mrs.valid_date_to, date_format(CURDATE(), '%Y-%m-%d')) + 1, '') as days_left									from membership_redemption_sku mrs									left join sku_items si on mrs.sku_item_id = si.id									left join branch on branch.id = mrs.branch_id									where mrs.active = 1 and mrs.confirm = 0									and if(".ms(BRANCH_CODE)." = 'HQ', mrs.branch_id in (select branch_id from user_privilege where privilege_code = 'MEMBERSHIP_ITEM_CFRM' and allowed and user_id = $sessioninfo[id]), branch_id = $sessioninfo[branch_id])									group by mrs.branch_id									having if(days_left != '', days_left > 0, 1=1)									order by branch.sequence,branch.code");			$smarty->assign("membership_item_cfrm", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('DO_APPROVAL'))		{			// check DO Approval			/*$con->sql_query("select count(*) as count, do.branch_id, branch.code	from do	left join branch_approval_history bah on do.approval_history_id = bah.id and bah.branch_id=do.branch_id	left join branch on do.branch_id = branch.id	where do.approved=0 and approvals like '|$sessioninfo[id]|%' and do.status = 1 and do.active=1 group by do.branch_id");*/	    	$result = $con->sql_query("select count(*) as count, do.branch_id, branch.code										from do										left join branch_approval_history bah on do.approval_history_id = bah.id and bah.branch_id=do.branch_id										left join branch on do.branch_id = branch.id										where (										(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or										(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))										) and do.approved=0 and do.status = 1 and do.active=1 group by do.branch_id										order by branch.sequence,branch.code");			$smarty->assign("do_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('MST_SKU_APPROVAL'))		{			// check notifications and run			// aproval history status:			// status = 0 - no body touch it yet			// status = 1 - someone approved			// status = 2 - someone rejected			// status = 3 - pending			// status = 4 - dead			//$con->sql_query("select count(*) from sku left join approval_history on sku.approval_history_id = approval_history.id where approvals like '%|$sessioninfo[id]|%' and sku.status <> 2 order by sku.timestamp");			if($config['single_server_mode']){				$db=$con;			}			else{				if(!$hqcon)	$hqcon = connect_hq();				$db=$hqcon;			}			$result = $db->sql_query("select count(*) from sku left join approval_history on sku.approval_history_id = approval_history.id where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	) and sku.status in (0,1) order by sku.timestamp");			$r = $db->sql_fetchrow($result);			$smarty->assign("sku_approvals", $r[0]);			$db->sql_freeresult($result);			unset($r,$arr,$a,$db);		}		if (privilege('ADJ_APPROVAL'))		{			// check  ADJ Approval			$result=$con->sql_query("select count(*) as count, adj.branch_id, branch.code	from adjustment adj	left join branch_approval_history bah on adj.approval_history_id = bah.id and bah.branch_id=adj.branch_id	left join branch on adj.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	)	and adj.approved=0 and adj.status = 1 and adj.active=1 group by adj.branch_id	order by branch.sequence,branch.code");			$smarty->assign("adj_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('MKT3_APPROVAL')){			$result = $con->sql_query("select count(*)	from mkt3	left join branch_approval_history  bah on mkt3.approval_history_id = bah.id and bah.branch_id=$sessioninfo[branch_id]	left join branch on mkt3.branch_id = branch.id	where mkt3.approved=0 and approvals like '|$sessioninfo[id]|%' and mkt3.status = 1	order by branch.sequence,branch.code");			$r = $con->sql_fetchrow($result);			$smarty->assign("mkt3_approvals", $r[0]);			$con->sql_freeresult($result);			unset($r);		}		if (privilege('MKT5_APPROVAL')){			$result=$con->sql_query("select count(*)	from mkt5_dept_approval	left join approval_history bah on mkt5_dept_approval.approval_history_id = bah.id	left join category on mkt5_dept_approval.dept_id = category.id	where mkt5_dept_approval.approved=0 and approvals like '|$sessioninfo[id]|%' and mkt5_dept_approval.status =1");			$r = $con->sql_fetchrow($result);			$smarty->assign("mkt5_approvals", $r[0]);			$con->sql_freeresult($result);			unset($r);		}		if (privilege('MKT1_APPROVAL') && BRANCH_CODE=='	'){			$result = $con->sql_query("select count(*)	from mkt1	left join approval_history bah on mkt1.approval_history_id = bah.id	where mkt1.approved=0 and approvals like '|$sessioninfo[id]|%' and mkt1.status = 1");			$r = $con->sql_fetchrow();			$smarty->assign("mkt1_approvals", $r[0]);			$con->sql_freeresult($result);			unset($r);		}		if (privilege('PO_APPROVAL'))		{			// check PO Approval			/*$con->sql_query("select count(*) as count, po.branch_id, branch.code	from po	left join branch_approval_history on po.approval_history_id = branch_approval_history.id and po.branch_id = branch_approval_history.branch_id	left join branch on po.branch_id = branch.id	where po.approved=0 and approvals like '|$sessioninfo[id]|%' and po.status = 1	group by po.branch_id");*/	    	$result = $con->sql_query("select count(*) as count, po.branch_id, branch.code	from po	left join branch_approval_history on po.approval_history_id = branch_approval_history.id and po.branch_id = branch_approval_history.branch_id	left join branch on po.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	) and po.approved=0 and po.status = 1 and po.active=1	group by po.branch_id	order by branch.sequence,branch.code");			$smarty->assign("po_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('PROMOTION_APPROVAL'))		{			// check Promotion Approval			/*$con->sql_query("select count(*) as count, promotion.branch_id, branch.code	from promotion	left join branch_approval_history on promotion.approval_history_id = branch_approval_history.id and promotion.branch_id = branch_approval_history.branch_id	left join branch on promotion.branch_id = branch.id	where promotion.approved=0 and approvals like '%|$sessioninfo[id]|%' and promotion.status = 1	group by promotion.branch_id");*/	    	$result = $con->sql_query("select count(*) as count, promotion.branch_id, branch.code	from promotion	left join branch_approval_history on promotion.approval_history_id = branch_approval_history.id and promotion.branch_id = branch_approval_history.branch_id	left join branch on promotion.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	) and promotion.approved=0 and promotion.status = 1 and promotion.active=1	group by promotion.branch_id	order by branch.sequence,branch.code");			$smarty->assign("promotion_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('SO_APPROVAL'))		{			// check  Sales ORder Approval			$result=$con->sql_query("select count(*) as count, so.branch_id, branch.code as branch_code	from sales_order so	left join branch_approval_history bah on so.approval_history_id = bah.id and bah.branch_id=so.branch_id	left join branch on so.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	)	and so.approved=0 and so.status = 1 and so.active=1 group by so.branch_id	order by branch.sequence,branch.code");			$smarty->assign("so_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if(privilege('DO_REQUEST_PROCESS')){			$filter = array();			//if(BRANCH_CODE!='HQ')			$filter[] = "dri.request_branch_id=".mi($sessioninfo['branch_id']);			$filter[] = "dri.status=0 and dri.active=1";			$filter[] = "c.department_id in ($sessioninfo[department_ids])";						$filter = "where ".join(' and ',$filter);			$sql = "select count(*) as item_count,dri.branch_id,b.code as branch_code	from do_request_items dri	left join sku_items si on si.id=dri.sku_item_id	left join sku on sku.id=si.sku_id	left join category c on c.id=sku.category_id	left join branch b on b.id=dri.branch_id	$filter group by dri.branch_id	order by b.sequence,b.code";			$q_dr = $con->sql_query($sql) or die(mysql_errno());			$smarty->assign('do_request',$con->sql_fetchrowset($q_dr));			$con->sql_freeresult($q_dr);			unset($q_dr,$filter,$sql);		}		if (privilege('CI_APPROVAL'))		{			// check Consignment Invoice Approval			/*$con->sql_query("select count(*) as count, ci.branch_id, branch.code	from ci	left join branch_approval_history bah on ci.approval_history_id = bah.id and bah.branch_id=ci.branch_id	left join branch on ci.branch_id = branch.id	where ci.approved=0 and approvals like '|$sessioninfo[id]|%' and ci.status = 1 group by ci.branch_id");*/	    	$result = $con->sql_query("select count(*) as count, ci.branch_id, branch.code	from ci	left join branch_approval_history bah on ci.approval_history_id = bah.id and bah.branch_id=ci.branch_id	left join branch on ci.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	) and ci.approved=0 and ci.status = 1 group by ci.branch_id	order by branch.sequence,branch.code");			$smarty->assign("ci_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('GRN_APPROVAL') && !$config['use_grn_future'])		{			// check GRN Acc Approval			$result=$con->sql_query("select count(*) as count, grn.branch_id, branch.code from grn left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id left join branch on grn.branch_id = branch.id where grn.approved=0 and approvals like '%|$sessioninfo[id]|%' and grn.active = 1 group by grn.branch_id			order by branch.sequence,branch.code");			/*$con->sql_query("select count(*) as count, grn.branch_id, branch.code from grn left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id left join branch on grn.branch_id = branch.id where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	) and grn.approved=0 and grn.active=1 group by grn.branch_id");*/			$smarty->assign("grn_account_verify", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if ($config['use_grn_future'])		{			if(privilege('GRN_APPROVAL')){				// check GRN Approval				$result=$con->sql_query("select count(*) as count, grn.branch_id, branch.code 				from grn left join branch_approval_history on grn.approval_history_id = branch_approval_history.id and grn.branch_id = branch_approval_history.branch_id left join branch on grn.branch_id = branch.id 				where (				(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or				(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))				) and grn.approved=0 and grn.status = 1 and grn.active = 1 				group by grn.branch_id order by branch.sequence,branch.code");				$smarty->assign("grn_approvals", $con->sql_fetchrowset($result));				$con->sql_freeresult($result);			}			if(privilege('GRN_VAR_DIV') || privilege('GRN_SIV_DIV') || privilege('GRN_PC_DIV')) $has_sku_manage = true;			if(privilege('GRN_ACCV_DIV')) $has_accv = true;			if($has_sku_manage || $has_accv){				$grn_count_list = $grn_list = array();				$dp_count = $accv_count = $skum_count = 0;				$result = $con->sql_query("select *, grn.id as grn_id, grn.amount as grn_amount,branch.report_prefix 										   from grn										   left join branch on grn.branch_id = branch.id										   left join grr on grr.id = grn.grr_id and grr.branch_id = grn.branch_id										   where grn.branch_id = ".mi($sessioninfo['branch_id'])."										   and grn.department_id in (".join(",",array_keys($sessioninfo['departments'])).")										   and grn.status = 0 and grn.authorized = 1 and grn.approved = 0 and grn.active = 1");				while($r = $con->sql_fetchrow($result)){					if($r['div1_approved_by'] && $r['div2_approved_by'] && $r['div3_approved_by'] && $has_accv){ // is only needs for account verification						if($r['grr_amount'] == 0 && $r['grn_amount'] != 0){							$r['action'] = "grr_edit";							$grn_count_list['doc_pending']++;						}else{							$grn_count_list['acc_verify']++;						}					}elseif((!$r['div1_approved_by'] && privilege('GRN_VAR_DIV')) || (!$r['div2_approved_by'] && privilege('GRN_SIV_DIV')) || (!$r['div3_approved_by'] && privilege('GRN_PC_DIV'))){						$r['action'] = "verify";						$grn_count_list['sku_manage']++;					}else continue;					$grn_list[] = $r;				}				$con->sql_freeresult($result);				$smarty->assign("grn_confirmations", $grn_list);				ksort($grn_count_list);				$smarty->assign("grn_count_list", $grn_count_list);				unset($grn_list, $grn_count_list);			}		}		if (privilege('CON_CN_APPROVAL'))		{			// check  Sales ORder Approval			$result=$con->sql_query("select count(*) as count, cn.branch_id, branch.code as branch_code	from cn	left join branch_approval_history bah on cn.approval_history_id = bah.id and bah.branch_id=cn.branch_id	left join branch on cn.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	)	and cn.approved=0 and cn.status = 1 group by cn.branch_id	order by branch.sequence,branch.code");			$smarty->assign("cn_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('CON_DN_APPROVAL'))		{			// check  Sales ORder Approval			$result=$con->sql_query("select count(*) as count, cn.branch_id, branch.code as branch_code	from dn cn	left join branch_approval_history bah on cn.approval_history_id = bah.id and bah.branch_id=cn.branch_id	left join branch on cn.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	)	and cn.approved=0 and cn.status = 1 group by cn.branch_id	order by branch.sequence,branch.code");			$smarty->assign("dn_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if($config['enable_po_agreement'] && privilege('PO_AGREEMENT_APPROVAL'))		{			// check  purchase agreement Approval			$result=$con->sql_query("select count(*) as count, pa.branch_id, branch.code as branch_code	from purchase_agreement pa	left join branch_approval_history bah on pa.approval_history_id = bah.id and bah.branch_id=pa.branch_id	left join branch on pa.branch_id = branch.id	where (	(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or	(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))	)	and pa.approved=0 and pa.status = 1 and pa.active=1 group by pa.branch_id	order by branch.sequence,branch.code");			$smarty->assign("purchase_agreement_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}			// notification for counter collection and invalid SKU		if(privilege('CC_FINALIZE'))		{			//$result = $con->sql_query("select distinct branch_id,date from pos where ".(BRANCH_CODE=='HQ' ? '' : 'branch_id='.mi($sessioninfo['branch_id']).' and ')." cancel_status=0 and date<".ms(date('Y-m-d'))." and (select pf.finalized from pos_finalized pf where pf.branch_id=pos.branch_id and pf.date=pos.date) is null order by date");			$min_date = date("Y-m-d", strtotime("-1 year"));						/*$sql = "select distinct pos.branch_id, pos.date 	from pos 	join pos_finalized pf on pf.branch_id=pos.branch_id and pf.date=pos.date	where ".(BRANCH_CODE=='HQ' ? '' : 'pos.branch_id='.mi($sessioninfo['branch_id']).' and ')." pos.cancel_status=0 and pos.date>=".ms($min_date)." and pos.date<".ms(date('Y-m-d'))." and pf.finalized=0 order by date";*/			$sql = "select pf.branch_id,pf.date, (select id from pos where pos.branch_id=pf.branch_id and pos.date=pf.date and pos.cancel_status=0 limit 1) as got_pos	 from pos_finalized pf	where ".(BRANCH_CODE=='HQ' ? '' : 'pf.branch_id='.mi($sessioninfo['branch_id']).' and ')." pf.date>=".ms($min_date)." and pf.date<".ms(date('Y-m-d'))." and pf.finalized=0 	having got_pos>0	order by date";						$result = $con->sql_query($sql);						$tmp_unfinalized_pos = array();			while($r = $con->sql_fetchassoc($result)){				$tmp_unfinalized_pos[$r['branch_id']]['date'][] = $r['date'];				$branch_arr[$r['branch_id']]=$r['branch_id'];			}			unset($r);			$con->sql_freeresult($result);			if($tmp_unfinalized_pos){				$result=$con->sql_query("select id, code, active from branch where id in (".implode(",",$branch_arr).") order by sequence,code");				while($temp = $con->sql_fetchassoc($result)){					if(!$temp['active']){						unset($tmp_unfinalized_pos[$temp['id']]);						continue;					}					$tmp_unfinalized_pos[$temp['id']]['branch_code'] = $temp['code'];					$tmp_unfinalized_pos[$temp['id']]['data_count'] = count($tmp_unfinalized_pos[$temp['id']]['date']);					$unfinalized_pos[$temp['id']]=$tmp_unfinalized_pos[$temp['id']];					unset($tmp_unfinalized_pos[$temp['id']]);				}				$con->sql_freeresult($result);			}			$smarty->assign('unfinalized_pos', $unfinalized_pos);			unset($branch_arr,$temp,$tmp_unfinalized_pos,$unfinalized_pos);		}		if (privilege('POS_VERIFY_SKU')){			//$result =$con->sql_query("select distinct branch_id,date from pos_items pi where ".(BRANCH_CODE=='HQ' ? '' : 'branch_id='.mi($sessioninfo['branch_id']).' and ')." sku_item_id=0 and (select pf.finalized from pos_finalized pf where pf.branch_id=pi.branch_id and pf.date=pi.date) is null and (select cancel_status from pos where pos.branch_id=pi.branch_id and pos.date=pi.date and pos.counter_id=pi.counter_id and pos.id=pi.pos_id) = 0 order by date");			$result =$con->sql_query("select distinct pi.branch_id,pi.date 	from pos_items pi 	join pos_finalized pf on pf.branch_id=pi.branch_id and pf.date=pi.date	join pos on pos.branch_id=pi.branch_id and pos.date=pi.date and pos.counter_id=pi.counter_id and pos.id=pi.pos_id	where ".(BRANCH_CODE=='HQ' ? '' : 'pi.branch_id='.mi($sessioninfo['branch_id']).' and ')." pi.sku_item_id=0 and pf.finalized=0 and pos.cancel_status = 0 order by date");			$total = $con->sql_numrows($result);			if($total > 0){   // got pos but no finalized				while($r = $con->sql_fetchassoc($result)){					$tmp_invalid_sku[$r['branch_id']]['date'][] = $r['date'];					$branch_arr[$r['branch_id']]=$r['branch_id'];				}			}			$con->sql_freeresult($result);			unset($r);			if($tmp_invalid_sku){				$result=$con->sql_query("select id, code, active from branch where id in (".implode(",",$branch_arr).") order by sequence,code");				while($temp = $con->sql_fetchassoc($result)){					if(!$temp['active']){						unset($tmp_invalid_sku[$temp['id']]);						continue;					}					$total_invalid_sku = count($tmp_invalid_sku[$temp['id']]['date']);					if ($total_invalid_sku>0){						$tmp_invalid_sku[$temp['id']]['branch_code'] = $temp['code'];						$tmp_invalid_sku[$temp['id']]['data_count'] = $total_invalid_sku;						$invalid_sku[$temp['id']]=$tmp_invalid_sku[$temp['id']];						unset($tmp_invalid_sku[$temp['id']]);					}				}				$smarty->assign('invalid_sku', $invalid_sku);				$con->sql_freeresult($result);			}			unset($branch_arr,$temp,$invalid_sku,$tmp_invalid_sku);		}		if(privilege('MST_SKU_UPDATE_FUTURE_PRICE'))		{			// check notifications and run			if(BRANCH_CODE != "HQ") $filter = "and sifp.branch_id = ".ms($sessioninfo['branch_id']);			$result = $con->sql_query("select count(*) as count, sifp.branch_id, b.code as branch_code									   from sku_items_future_price sifp									   left join branch_approval_history bah on sifp.approval_history_id = bah.id and sifp.branch_id = bah.branch_id									   left join branch b on sifp.branch_id = b.id									   where sifp.active=1 and sifp.status = 1 and sifp.approved=0 and ((bah.approvals like '|$sessioninfo[id]|%' and bah.approval_order_id=1) or (bah.approvals like '%|$sessioninfo[id]|%' and bah.approval_order_id in (2,3)))									   $filter									   group by sifp.branch_id									   order by b.sequence,b.code");			$smarty->assign("fp_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if(privilege('E_FORM_APPROVAL'))		{			// check notifications and run			if(BRANCH_CODE != "HQ") $filter = "and ed.branch_id = ".ms($sessioninfo['branch_id']);			$result = $con->sql_query("select count(*) as count, ed.branch_id, b.code as branch_code									   from eform_data ed									   left join branch_approval_history bah on ed.approval_history_id = bah.id and ed.branch_id = bah.branch_id									   left join branch b on ed.branch_id = b.id	                                   where ed.active=1 and ed.status = 1 and ed.approved=0									   and ((bah.approvals like '|$sessioninfo[id]|%' and bah.approval_order_id=1) or (bah.approvals like '%|$sessioninfo[id]|%' and bah.approval_order_id in (2,3)))									   $filter									   group by ed.branch_id									   order by b.sequence,b.code");	        			$smarty->assign("ed_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		// GRA approval		if (privilege('GRA_APPROVAL'))		{			// check GRA Approval			$q1 = $con->sql_query("select count(*) as count, gra.branch_id, branch.code 								   from gra								   left join branch_approval_history bah on gra.approval_history_id = bah.id and gra.branch_id = bah.branch_id 								   left join branch on gra.branch_id = branch.id 								   where gra.returned = 0								   and bah.approvals like '%|$sessioninfo[id]|%' and gra.status = 2 and gra.approved=0								   group by gra.branch_id 								   order by branch.sequence, branch.code");			$smarty->assign("gra_approvals", $con->sql_fetchrowset($q1));		}		//stucked document approvals		if (privilege('APPROVAL_ON_BEHALF')) {			include_once("stucked_document_approvals.include.php");			$sda = new STUCKED_DOCUMENT_APPROVALS('', true);			$stucked_docs = $sda->get_notification_data();			$smarty->assign("stucked_docs", $stucked_docs);		}				// cnote		if (privilege('CN_APPROVAL'))		{			// check  Sales ORder Approval			$result=$con->sql_query("select count(*) as count, cn.branch_id, branch.code as branch_code				from cnote cn				left join branch_approval_history bah on cn.approval_history_id = bah.id and bah.branch_id=cn.branch_id				left join branch on cn.branch_id = branch.id				where (				(approvals like '|$sessioninfo[id]|%' and approval_order_id=1) or				(approvals like '%|$sessioninfo[id]|%' and approval_order_id in (2,3))				)				and cn.approved=0 and cn.status = 1 and cn.active=1 				group by cn.branch_id				order by branch.sequence,branch.code");			$smarty->assign("cnote_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}				// Cycle Count		if (privilege('STOCK_TAKE_CYCLE_COUNT_APPROVAL'))		{			// check  Sales ORder Approval			$result = $con->sql_query("select count(*) as count, cc.branch_id, branch.code as branch_code				from cycle_count cc				join branch_approval_history bah on cc.approval_history_id = bah.id				left join branch on cc.branch_id = branch.id				where (				(bah.approvals like '|$sessioninfo[id]|%' and bah.approval_order_id=1) or				(bah.approvals like '%|$sessioninfo[id]|%' and bah.approval_order_id in (2,3))				) and cc.active=1 and cc.status=1 and cc.approved=0				group by cc.branch_id				order by branch.sequence,branch.code");			$smarty->assign("cycle_count_approvals", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		$smarty->display("notifications_left_sidebar.tpl");	}	function ajax_right_sidebar(){		global $con, $sessioninfo, $smarty, $config;		$depts = "dept_id in (" . join(",", array_keys($sessioninfo['departments'])) . ")";		if (privilege('NT_SKU_PRICE_CHANGE') && !isset($sessioninfo['departments'][0]))		{			// check notifications and run			if (BRANCH_CODE!='HQ') $br = "and branch_id = $sessioninfo[branch_id]";			//Price Change			$result = $con->sql_query("select sku_items_price.branch_id, sku_items.id, branch.code as branch, sku_item_code, sku_items.description, price, last_update,sku_items.artno from sku_items_price left join branch on branch_id = branch.id left join sku_items on sku_item_id = sku_items.id left join sku on sku_id = sku.id left join category on category_id = category.id where ".str_replace("dept_id","department_id",$depts)." $br order by last_update desc limit 25");			$smarty->assign("price_history", $con->sql_fetchrowset($result));			$con->sql_freeresult($result);			//Temp Price			$con->sql_query("Show tables like 'sku_items_temp_price'");			if($con->sql_numrows()>0)			{				$result = $con->sql_query("Select user.u as username, sku_items_temp_price.branch_id,sku_items.id as sku_item_id,branch.code as branch,sku_item_code,sku_items.description,sku_items_temp_price.temp_price,sku_items_temp_price.lastupdate,sku_items_temp_price.reason from sku_items_temp_price left join branch on branch_id=branch.id left join user on temp_by=user.id left join sku_items on sku_item_id=sku_items.id left join sku on sku_id = sku.id left join category on category_id=category.id where ".str_replace("dept_id","department_id",$depts)." $br order by sku_items_temp_price.lastupdate desc limit 25");				$smarty->assign('temp_price_history',$con->sql_fetchrowset($result));				$con->sql_freeresult($result);			}		}		//Batch Price Change		if(BRANCH_CODE != "HQ") $filter = "and sifp.branch_id = ".mi($sessioninfo['branch_id']);				$ret = array();		$sql = $con->sql_query("select sifp.*, u.u as username, bah.approvals								from sku_items_future_price sifp								left join user u on u.id = sifp.user_id								left join branch_approval_history bah on bah.id = sifp.approval_history_id and bah.branch_id = sifp.branch_id								where sifp.active=1 and sifp.status=1 and sifp.approved=1 and sifp.cron_status = 0 $filter								order by sifp.last_update desc limit 100");		while($r = $con->sql_fetchassoc($sql)){			$ret['ok'] = 1;			if(BRANCH_CODE == "HQ") $extra_info = " [".get_branch_code($r['branch_id'])."]";			$ret['html'] .= "<div style=\"border-bottom:1px solid #eee\"> 							<font color=\"#666666\">							<a href=\"/masterfile_sku_items.future_price.php?a=view&id=".mi($r['id'])."&branch_id=".mi($r['branch_id'])."\" target=\"_blank\">#".str_pad($r['id'], 5, "0", STR_PAD_LEFT).$extra_info."</a><br />							</font><font class=\"small\">							Created: <font color=\"blue\">".$r['added']."</font><br>							Last Updated: <font color=\"blue\">".$r['last_update']."</font>							<br>							</font>							</div>";		}		$smarty->assign("batch_price_change", $ret);		//add PO Overdue		if(privilege('PO') || privilege('PO_APPROVAL')){			$today = date("Y-m-d");			//get branch_code			$result = $con->sql_query("select id,code from branch");			while($r_branch = $con->sql_fetchrow($result))			{				$arr_branch[$r_branch['id']] = $r_branch['code'];			}			$con->sql_freeresult($result);			$result = $con->sql_query("select po.id,po.branch_id,po.delivery_date,po.cancel_date as cancel_date,po.po_date,po.po_no,po.po_option,user.u,category.description,po.deliver_to			  from po			  LEFT JOIN category on category.department_id = po.department_id and category.level = '2'			  LEFT JOIN user on po.user_id = user.id			  LEFT JOIN branch_approval_history on branch_approval_history.branch_id = po.branch_id and branch_approval_history.id = po.approval_history_id			  where po.branch_id = ".ms($sessioninfo['branch_id'])." and po.approved = '1' and po.delivered = '0' and po.status= '1' and po.active = '1' and 			  (branch_approval_history.flow_approvals like '%|$sessioninfo[id]|%' or po.user_id=$sessioninfo[id]) and po.po_option=0 order by po.po_date desc");			while($r = $con->sql_fetchassoc($result))			{				if($r['po_option']!="0")				{					$delivery_date = unserialize($r['delivery_date']);					$cancel_date = unserialize($r['cancel_date']);					$deliver_to = unserialize($r['deliver_to']);					if($delivery_date)					{						foreach($deliver_to as $tmp_bid)						{						  list($d,$m,$y) = explode("/",$delivery_date[$tmp_bid]);						  $dd = "$y-$m-$d";						  if(strtotime($dd) < strtotime($today))						   {							  $data[$r['id']][$tmp_bid]['user'] = $r['u'];							  $data[$r['id']][$tmp_bid]['po_no'] = $r['po_no'];							  $data[$r['id']][$tmp_bid]['po_date'] = $r['po_date'];							  //$dd = date("Y-m-d",dmy_to_time($dd));							  //print "<!-- $dd -->";							  $cancel_date[$tmp_bid] = date("Y-m-d",dmy_to_time($cancel_date[$tmp_bid]));							  $data[$r['id']][$tmp_bid]['delivered_date'] = $dd;							  $data[$r['id']][$tmp_bid]['cancel_date'] = $cancel_date[$tmp_bid];							  $data[$r['id']][$tmp_bid]['department'] = $r['description'];							  $data[$r['id']][$tmp_bid]['branch'] = $arr_branch[$tmp_bid];						   }						}					}				}else				{					list($d,$m,$y) = explode("/",$r['delivery_date']);					$r['delivery_date'] = "$y-$m-$d";					if(strtotime($r['delivery_date']) < strtotime($today))					{						$data[$r['id']][$r['branch_id']]['user'] = $r['u'];						$data[$r['id']][$r['branch_id']]['po_no'] = $r['po_no'];						$data[$r['id']][$r['branch_id']]['po_date'] = $r['po_date'];						//$r['delivery_date'] = date("Y-m-d",dmy_to_time($r['delivery_date']));						$r['cancel_date'] = date("Y-m-d",dmy_to_time($r['cancel_date']));						$data[$r['id']][$r['branch_id']]['delivered_date'] = $r['delivery_date'];						$data[$r['id']][$r['branch_id']]['cancel_date'] = $r['cancel_date'];						$data[$r['id']][$r['branch_id']]['department'] = $r['description'];						$data[$r['id']][$r['branch_id']]['branch'] = $arr_branch[$r['branch_id']];					}				}			}			$con->sql_freeresult($result);			$smarty->assign("po_overdue", $data);			unset($arr_branch,$delivery_date,$cancel_date,$deliver_to,$filter,$r,$data);		}		if (privilege('NT_NEW_SKU') && !isset($sessioninfo['departments'][0]) && $sessioninfo['level']>=9999)		{			// check notifications and run			$result = $con->sql_query("select sku_items.* from sku_items order by sku_items.id desc limit 25");			$new_sku = array();			while($r = $con->sql_fetchassoc($result)){				$new_sku[] = $r;			}			$con->sql_freeresult($result);						$smarty->assign("new_sku", $new_sku);		}		if (privilege('GRA_NOTIFY'))		{			$result=$con->sql_query("select gra.id,gra.added,gra.last_update,vendor.description as vendor from gra left join vendor on gra.vendor_id = vendor.id where gra.status in (0,2) and gra.returned=0 and gra.added < DATE_SUB(CURDATE(),INTERVAL 6 DAY) and branch_id=$sessioninfo[branch_id] order by gra.last_update desc limit 10");			$smarty->assign("last_gra",$con->sql_fetchrowset($result));			$con->sql_freeresult($result);		}		if (privilege('GRR_NOTIFY'))		{			$where = "grr.branch_id = $sessioninfo[branch_id] and grr.status <> 2 and grr.vendor_id != 0 and grr.active=1 group by grr.id having po_count>po_used_count or (po_count=0 and inv_count>inv_used_count)";			$result = $con->sql_query("select sum(if(type='PO',1,0)) as po_count,sum(if(type='PO' and grn_used=1,1,0)) as po_used_count, sum(if(type='INVOICE',1,0)) as inv_count,sum(if(type='INVOICE' and grn_used=1,1,0)) as inv_used_count, grr.*, category.id as dept_id, vendor.description as vendor	from grr_items 	left join grr on grr_items.grr_id = grr.id and grr_items.branch_id = grr.branch_id 	left join category on category.id=grr.department_id 	left join vendor on vendor.id=grr.vendor_id 	where grr.rcv_date< DATE_SUB(CURDATE(),INTERVAL $config[grr_incomplete_notification] DAY) and $where and $depts 	order by grr.rcv_date desc");			$grr_notify=$con->sql_fetchrowset($result);			$smarty->assign("grr_notify",$grr_notify);			unset($where,$grr_notify);			$con->sql_freeresult($result);		}		if (privilege('NT_RDM_ITEM') && $config['membership_redemption_expire_days'] && !isset($sessioninfo['departments'][0]))		{			// check notifications and run			$result = $con->sql_query("select mrs.*, si.sku_item_code, if(mrs.valid_date_to != '' and mrs.valid_date_to != '0000-00-00', datediff(mrs.valid_date_to, date_format(CURDATE(), '%Y-%m-%d')) + 1, '') as days_left from membership_redemption_sku mrs left join sku_items si on si.id = mrs.sku_item_id where mrs.active = 1 and mrs.valid_date_to != '' and mrs.valid_date_to != '0000-00-00' having days_left <= $config[membership_redemption_expire_days] and days_left > 0 order by mrs.id");			while($r = $con->sql_fetchrow($result)){				$r['available_branches'] = unserialize($r['available_branches']);				if(BRANCH_CODE!='HQ'&&$r['branch_id']!=$sessioninfo['branch_id']){					if(!$r['available_branches'][$sessioninfo['branch_id']])    continue;				}	            $redemption_items[] = $r;			}			$smarty->assign("redemption_items", $redemption_items);			$con->sql_freeresult($result);		}		// GRN Distribution Status		if (BRANCH_CODE == "HQ" && privilege('NT_GRN_DISTRIBUTE')){			$q1 = $con->sql_query("select count(*) as ttl_branch from branch");			$branch_count = $con->sql_fetchassoc($q1);			$con->sql_freeresult($q1);			// check if branch not more than 1, then do not show distribution			if($branch_count['ttl_branch'] > 1){				$grn_deliver_monitor = array();				$monitor_after_day = mi($config['grn_distribution_monitor_after_day']);				if(!$monitor_after_day)	$monitor_after_day = 3;				$grn_deliver_monitor['info']['monitor_after_day'] = $monitor_after_day;				$date_filter = date("Y-m-d", strtotime("-$monitor_after_day day"));				$min_do_qty_percent = mi($config['grn_distribution_monitor_min_do_qty_percent']);				if(!$min_do_qty_percent)	$min_do_qty_percent = 50;				$grn_deliver_monitor['info']['min_do_qty_percent'] = $min_do_qty_percent;				// get all GRN need to monitor				$q_grn = $con->sql_query("select grr.rcv_date,grn.branch_id,grn.id,branch.report_prefix 					from grn					left join branch on grn.branch_id = branch.id					left join grr_items gi on gi.branch_id=grn.branch_id and gi.id=grn.grr_item_id					left join grr on grn.grr_id = grr.id and grn.branch_id = grr.branch_id					where grn.branch_id=1 and grn.need_monitor_deliver=1 and grr.active=1 and grn.approved=1 and grn.status=1 and grn.active=1 and grr.rcv_date<".ms($date_filter)." order by rcv_date desc");				// loop for each GRN				$do_left_qty = array();				$limit_count = 10;								while($grn = $con->sql_fetchassoc($q_grn)){					$q_grni = $con->sql_query("select sum(if (grn_items.acc_ctn is null and grn_items.acc_pcs is null, grn_items.ctn *rcv_uom.fraction + grn_items.pcs, grn_items.acc_ctn *rcv_uom.fraction + grn_items.acc_pcs)) as qty, grn_items.sku_item_id					from grn_items					left join uom rcv_uom on grn_items.uom_id=rcv_uom.id					left join sku_items on grn_items.sku_item_id = sku_items.id					where grn_items.branch_id = ".mi($grn['branch_id'])." and grn_items.grn_id=".mi($grn['id'])."					group by grn_items.sku_item_id					");					// loop for grn items					$total_grn_qty = 0;					$sid_list = array();					$grn_items = array();					while($grni = $con->sql_fetchassoc($q_grni)){						$sid = mi($grni['sku_item_id']);						$total_grn_qty += $grni['qty'];						$sid_list[] = $sid;						$grn_items[$sid] = $grni;					}					$con->sql_freeresult($q_grni);					if(!$sid_list || !$total_grn_qty){						$con->sql_query("update grn set need_monitor_deliver=0 where branch_id=".mi($grn['branch_id'])." and id=".mi($grn['id']));						continue;					}					$q_di = $con->sql_query("select di.id, di.sku_item_id, ((di.ctn*uom.fraction)+di.pcs) as do_qty		from do_items di		left join do on do.branch_id=di.branch_id and do.id=di.do_id		left join uom on uom.id=di.uom_id		where do.branch_id=".mi($grn['branch_id'])." and do.active=1 and do.status=1 and do.approved=1 and do.checkout=1 and do.do_date>=".ms($grn['rcv_date'])." and di.sku_item_id in (".join(',', $sid_list).")");					$total_do_qty = 0;					while($di = $con->sql_fetchassoc($q_di)){						$sid = mi($di['sku_item_id']);						$left_qty = $grn_items[$sid]['qty'] - $grn_items[$sid]['do_qty'];						// it is due to other grn have taken some do_qty						if(isset($do_left_qty[$di['id']]))	$di['do_qty'] = $do_left_qty[$di['id']];						if(!$di['do_qty'])	continue;	// already used all qty to DO						$do_qty = 0;						if($di['do_qty'] < $left_qty)	$do_qty = $di['do_qty'];						else	$do_qty = $left_qty;						$grn_items[$sid]['do_qty'] += $do_qty;						$do_left_qty[$di['id']] = $di['do_qty'] - $do_qty;						$total_do_qty += $do_qty;					}					$con->sql_freeresult($q_di);					$grn['items'] = $grn_items;					$grn['do_per'] = mi(($total_do_qty / $total_grn_qty) * 100);					if($grn['do_per'] >= $min_do_qty_percent){	// already qualified percent						// mark as no need to monitor anymore						$con->sql_query("update grn set need_monitor_deliver=0 where branch_id=".mi($grn['branch_id'])." and id=".mi($grn['id']));					}else{						if(count($grn_deliver_monitor['grn'])>=$limit_count){							$grn_deliver_monitor['have_more'] = 1;							break;	// save loading not to load too many						}else{							$grn_deliver_monitor['grn'][] = $grn;						}					}				}				$con->sql_freeresult($q_grn);				//print_r($do_left_qty);				//print_r($grn_deliver_monitor);				$smarty->assign('grn_deliver_monitor', $grn_deliver_monitor);				unset($di,$grn,$grn_items,$do_left_qty,$grn_deliver_monitor);			}		}		// notification for stock reorder pregen sku		if(privilege('NT_STOCK_REORDER')){			$result = $con->sql_query("select vsr.*,v.code as vcode,v.description as v_desc,c.description as c_desc from	vendor_stock_reorder_sku vsr	left join vendor v on v.id=vsr.vendor_id	left join category c on c.id=vsr.category_id	where vsr.branch_id=".mi($sessioninfo['branch_id'])."	order by v_desc,c_desc");			$stock_reorder_data = array();			while($r = $con->sql_fetchassoc($result)){				$r['sku_id_list'] = unserialize($r['sku_id_list']);				$stock_reorder_data[$r['vendor_id']][$r['category_id']] = $r;			}			$con->sql_freeresult($result);			$smarty->assign('stock_reorder_data', $stock_reorder_data);			unset($r,$stock_reorder_data);		}		$smarty->display("notifications_right_sidebar.tpl");	}?>