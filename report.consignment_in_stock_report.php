<?php/*7/10/2009 4:47:37 PM Andy- Added exclude those grn with type == 'DO' when branch is HQ1/6/2010 5:02:03 PM Andy- Add config 'ci_use_split_artno' to check whether split artno1/18/2011 9:29:49 AM Alex- change use report_server3/18/2011 5:52:47 PM Alex- fix grn cost amount bugs5/12/2011 3:43:32 PM Alex- add use hq_cost*/include("include/common.php");//$con = new sql_db('cutemaree.dyndns.org:4001','arms','990506','armshq');include("include/class.report.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");class Consignment_In_Stock_Report extends Report{	function run(){		global $con, $smarty, $config;				$con_multi= new mysql_multi();		if(!$con_multi){			die("Error: Fail to connect report server");		}		$table = $this->table;		$total = $this->total;		$sku_items_info = $this->sku_items_info;		$cost = $this->cost;        $price = $this->price;        		if(!$cost)  $cost = array();		if(!$price)  $price = array();				$filter = $this->filter;		$branch_id = $this->branch_id;		$date_from = $this->date_from;		$date_to = $this->date_to;		$show_by = $this->show_by;				$filter[] = 'grn.branch_id='.mi($branch_id);		$filter[] = 'rcv_date between '.ms($date_from).' and '.ms($date_to);		$filter[] = "grn.approved=1 and grn.status and grn.active";		if($branch_id==1)   $filter[] = "gi.type<>'DO'";		$filter = 'where '.join(' and ',$filter);/*		(if (grn_items.acc_ctn is null and grn_items.acc_pcs is null,	(grn_items.ctn  + (grn_items.pcs / rcv_uom.fraction)),	(grn_items.acc_ctn + (grn_items.acc_pcs / rcv_uom.fraction))) *	if (grn_items.acc_cost is null, grn_items.cost,grn_items.acc_cost)) as total_rcv_cost,*/		$sql = "select grn_items.sku_item_id as sid,		(if (grn_items.acc_ctn is null and grn_items.acc_pcs is null, grn_items.ctn *rcv_uom.fraction + grn_items.pcs, grn_items.acc_ctn *rcv_uom.fraction + grn_items.acc_pcs)) as qty,		rcv_date, si.sku_item_code,si.artno,si.mcode,si.description,gi.type,gi.doc_no,si.hq_costfrom grn_itemsleft join uom rcv_uom on grn_items.uom_id=rcv_uom.idleft join grn on grn_id = grn.id and grn_items.branch_id = grn.branch_idleft join grr on grr_id = grr.id and grn.branch_id = grr.branch_idleft join sku_items si on si.id=grn_items.sku_item_idleft join grr_items gi on gi.id=grn.grr_item_id and gi.branch_id=grn.branch_id$filter";//,if((select do_no from do where do_no=gi.doc_no) is null,0,1) as dont_count		//print $sql;		$q_m = $con_multi->sql_query($sql) or die(mysql_error());		while($r = $con_multi->sql_fetchassoc($q_m)){		    //if($r['dont_count'])    continue;		    			if($show_by=='daily')	$lbl = $r['rcv_date'];			elseif($show_by=='weekly')  $lbl =  date('W',strtotime($r['rcv_date']));			else    $lbl =  date('m',strtotime($r['rcv_date']));						$table[$r['sid']][$lbl]['qty'] += $r['qty'];						if(!$sku_items_info[$r['sid']]){			    if($config['ci_use_split_artno']){			    	list($r['artno_code'],$r['artno_size']) = preg_split("/\s+/",$r['artno'],2);			    }                $sku_items_info[$r['sid']] = $r;			}						$total[$r['sid']]['total']['qty'] += $r['qty'];			$total['total']['total']['qty'] += $r['qty'];			$total[$lbl]['qty'] += $r['qty'];			// get last grn and avg cost			if(!$cost[$r['sid']]){				if ($_REQUEST['hq_cost']){					$cost[$r['sid']]['hq_cost'] = $r['hq_cost'];	                $total['total']['hq_cost'] += $r['hq_cost'];									}else{					$con->sql_query("select * from sku_items_cost_history where sku_item_id=".mi($r['sid'])." and branch_id=$branch_id and date<=".ms($date_to)." order by date desc limit 1");					$temp = $con->sql_fetchassoc();					$cost[$r['sid']] = $temp;					$con->sql_freeresult();					$total['total']['grn_cost'] += $temp['grn_cost'];					$total['total']['avg_cost'] += $temp['avg_cost'];				}			}						// get last price			if(!$price[$r['sid']]){				$con->sql_query("select price from sku_items_price_history where sku_item_id=".mi($r['sid'])." and branch_id=$branch_id and added<=".ms($date_to)." order by added limit 1");                $temp = $con->sql_fetchfield(0);                if(!$temp){					$con->sql_query("select selling_price from sku_items where id=".mi($r['sid'])) or die(mysql_error());					$temp = $con->sql_fetchfield(0);				}                $price[$r['sid']] = $temp;                $con->sql_freeresult();                $total['total']['selling_price'] += $temp;			}		}		$con_multi->sql_freeresult($q_m);				// calculate total details		if($table){			foreach($table as $sid=>&$r){				$total_qty = $total[$sid]['total']['qty'];				$selling_price = $price[$sid];				$total_selling_price = $total_qty * $selling_price;				$total[$sid]['total_selling_price'] = $total_selling_price;				$total['total']['total_selling_price'] += $total_selling_price;			}		}		//print_r($table);		$this->table = $table;		$this->total = $total;		$this->cost = $cost;		$this->price = $price;        $this->sku_items_info = $sku_items_info;		$con_multi->close_connection();	}		function generate_report()	{		global $con, $smarty;				$this->run();		//print_r($this->sku_items_info);		if(!empty($this->sort_by)&&$this->table)    $this->sort_data();		//print_r($this->sku_items_info);				$smarty->assign('table',$this->table);		$smarty->assign('total',$this->total);		$smarty->assign('label',$this->label);		$smarty->assign('cost',$this->cost);		$smarty->assign('price',$this->price);		$smarty->assign('sku_items_info',$this->sku_items_info);			}		function process_form()	{	    global $con,$smarty,$sessioninfo;		// do my own form process				// call parent		parent::process_form();		$mtest =strtotime("+1 year",strtotime($this->date_from));		if (strtotime($this->date_to) > $mtest){           $this->date_to = date("Y-m-d",$mtest);           $_REQUEST['date_to'] = $this->date_to;		}				$this->sort_by = $_REQUEST['sort_by'];		$this->sort_order = $_REQUEST['sort_order'];		$this->branch_id = mi($_REQUEST['branch_id']);		$this->date_from = $_REQUEST['date_from'];		$this->date_to = $_REQUEST['date_to'];		$this->show_by = $_REQUEST['show_by'];				$this->label = $this->generate_dates($this->date_from,$this->date_to,'Ymd','Y-m-d');		if($this->show_by=='weekly'){			$label = array();			foreach($this->label as $d){				$wk_no = date('W',strtotime($d));				if(!in_array($wk_no,$label))    $label[] = $wk_no;			}			$this->label = $label;		}elseif($this->show_by=='monthly'){            $label = array();			foreach($this->label as $d){				$m = date('m',strtotime($d));				if(!in_array($m,$label))    $label[] = $m;			}			$this->label = $label;		}		//print_r($this->label);	}		function default_values()	{        $_REQUEST['date_from'] = date("Y-m-d", strtotime("-1 month"));	    $_REQUEST['date_to'] = date("Y-m-d");	}		private function sort_data(){		usort($this->sku_items_info,array($this,'start_sort'));	}	function start_sort($a,$b){		$col = $this->sort_by;		$sort_order = $this->sort_order;	    if ($a[$col]==$b[$col]) return 0;	    elseif($sort_order=='desc') return ($a[$col]>$b[$col]) ? -1 : 1;	    else return ($a[$col]>$b[$col]) ? 1 : -1;	}}$report = new Consignment_In_Stock_Report('Consignment In Stock Report');?>