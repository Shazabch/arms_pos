<?php/*7/3/2019 11:37 AM william- Changed "vendor" sort by alphabet.2/20/2020 10:30 AM William- Enhanced to change connection "$con" to use report server connection "$con_multi".12/2/2020 3:34 PM Andy- Fixed to get vendor / brand latest rate by order by date_from desc*/include("include/common.php");include("include/class.report.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");class CONSIGNMENT_SALES_BY_SKU_REPORT extends Module{    function __construct($title){		global $con, $smarty, $con_multi, $appCore;				if(!$con_multi)	$con_multi = $appCore->reportManager->connectReportServer();		if (!$_REQUEST['date_from']) $_REQUEST['date_from'] = date('Y-m-d', strtotime("-1 month"));		if (!$_REQUEST['date_to']) $_REQUEST['date_to'] = date('Y-m-d');		// load branches		$q1 = $con_multi->sql_query("select id, code, description from branch where active=1 order by sequence, code");		while($r = $con_multi->sql_fetchassoc($q1)){			$this->branches[$r['id']] = $r;		}		$con_multi->sql_freeresult($q1);		$smarty->assign('branches',$this->branches);				// load branch group		$this->branches_group = $this->load_branch_group();				// load vendor list		$q1 = $con_multi->sql_query("select * from vendor order by description asc,code");		while($r = $con_multi->sql_fetchassoc($q1)){			$this->vendors[$r['id']] = $r;		}		$con_multi->sql_freeresult($q1);		$smarty->assign('vendors',$this->vendors);		    	parent::__construct($title);    }		function _default(){		$this->display();		exit;	}	function show_report(){		$this->process_form();		$this->generate_report();		$this->display();	}	private function run_report($bid){        global $smarty, $config, $con_multi;		/*$con_multi = new mysql_multi();		if(!$con_multi){	 		die("Error: Fail to connect report server");		}*/				// check whether the S/A match all the conditions set from commission module		$q1 = $con_multi->sql_query("select pi.sku_item_id, si.sku_item_code, si.artno, si.mcode, si.description as sku_desc, si.artno, s.vendor_id, v.description as vd_desc, 									s.brand_id, b.description as brand_desc, pi.trade_discount_code as price_type, pi.qty, s.trade_discount_type, s.sku_type,									(pi.price-pi.discount-pi.discount2-tax_amount) as amount, (pi.discount+pi.discount2) as disc_amt, pi.tax_amount, p.date,									round(coalesce(((pi.discount+pi.discount2)/pi.price)*100, 0), 2) as discount, c.id as dept_id, c.description as dept_name, pi.tax_code									from pos_items pi									left join pos p on p.id = pi.pos_id and p.branch_id = pi.branch_id and p.counter_id = pi.counter_id and p.date = pi.date									left join `sku_items` si on si.id = pi.sku_item_id									left join `sku` s on s.id = si.sku_id									left join `vendor` v on v.id = s.vendor_id									left join `brand` b on b.id = s.brand_id									left join `category_cache` cc using(category_id) 									left join `category` c on c.id = cc.p2									join `pos_finalized` pf on pf.date = pi.date and pf.branch_id = pi.branch_id and pf.finalized=1									where ".join(" and ", $this->filters)." and pi.branch_id = ".mi($bid)."									order by si.sku_item_code");		while($r = $con_multi->sql_fetchassoc($q1)){			$r['discount_rate'] = $r['consign_cost'] = 0;			if($config['sku_consign_selling_deduct_discount_as_cost'] && $r['price_type'] && $r['trade_discount_type']){				if($r['trade_discount_type']==1){    // use brand					$q2 = $con_multi->sql_query($sql="select rate from brand_commission_history where branch_id=".mi($bid)." and brand_id=".mi($r['brand_id'])." and department_id=".mi($r['dept_id'])." and skutype_code=".ms($r['price_type'])." and ".ms($r['date'])." between date_from and date_to order by date_from desc limit 1");										// get from master brand commission					if($con_multi->sql_numrows($q2) == 0){						$q2 = $con_multi->sql_query($sql="select rate from brand_commission where branch_id=".mi($bid)." and brand_id=".mi($r['brand_id'])." and department_id=".mi($r['dept_id'])." and skutype_code=".ms($r['price_type']));					}				}elseif($r['trade_discount_type']==2){   // use vendor					$q2 = $con_multi->sql_query($sql="select rate from vendor_commission_history where branch_id=".mi($bid)." and vendor_id=".mi($r['vendor_id'])." and department_id=".mi($r['dept_id'])." and skutype_code=".ms($r['price_type'])." and ".ms($r['date'])." between date_from and date_to order by date_from desc limit 1");										// get from master brand commission					if($con_multi->sql_numrows($q2) == 0){						$q2 = $con_multi->sql_query($sql="select rate from vendor_commission where branch_id=".mi($bid)." and vendor_id=".mi($r['vendor_id'])." and department_id=".mi($r['dept_id'])." and skutype_code=".ms($r['price_type']));					}				}				$r['discount_rate'] = mf($con_multi->sql_fetchfield(0, -1, $q2));				$con_multi->sql_freeresult($q2);				$consign_cost = round($r['amount'] * ((100-$r['discount_rate'])*0.01), $config['global_cost_decimal_points']);				$r['consign_cost'] = $consign_cost;			}elseif($config['sku_consign_selling_deduct_discount_as_cost']) $r['consign_cost'] = $r['amount'];						$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sku_item_code'] = $r['sku_item_code'];			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['artno'] = $r['artno'];			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['mcode'] = $r['mcode'];			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sku_desc'] = $r['sku_desc'];			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sales_qty'] += $r['qty'];			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sales_amt'] += round($r['amount']+$r['tax_amount'], 2);			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['tax_amt'] += $r['tax_amount'];			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['nett_sales_amt'] += $r['amount'];						// calculate avg sp, gst and nett sp			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['avg_sp'] = round($this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sales_amt']/$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sales_qty'], 2);			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['avg_gst'] = round($this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['tax_amt']/$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sales_qty'], 2);			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['avg_nett_sp'] = round($this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['nett_sales_amt']/$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['sales_qty'], 2);						// consignment cost			$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['consign_cost_amt'] += $r['consign_cost'];						// calculate gp for consignment cost			if($this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['consign_cost_amt'] > 0){				$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['consign_gp'] += round($r['amount'] - $r['consign_cost'], 2);				$this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['consign_gp_perc'] = round($this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['consign_gp'] / $this->table['details'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']][$r['sku_item_id']]['nett_sales_amt'] * 100, 2);			}			// sub total			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['dept_name'] = $r['dept_name'];			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['sales_qty'] += $r['qty'];			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['sales_amt'] += round($r['amount']+$r['tax_amount'], 2);			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['tax_amt'] += $r['tax_amount'];			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['nett_sales_amt'] += $r['amount'];			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['consign_cost_amt'] += $r['consign_cost'];						// sub total - calculate avg sp, gst and nett sp			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['avg_sp'] = round($this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['sales_amt']/$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['sales_qty'], 2);			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['avg_gst'] = round($this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['tax_amt']/$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['sales_qty'], 2);			$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['avg_nett_sp'] = round($this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['nett_sales_amt']/$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['sales_qty'], 2);						if($this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['consign_cost_amt'] > 0){				$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['consign_gp'] += round($r['amount'] - $r['consign_cost'], 2);				$this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['consign_gp_perc'] = round($this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['consign_gp'] / $this->table['sub_total'][$bid][$r['vendor_id']][$r['dept_id']][$r['price_type']][$r['discount_rate']]['nett_sales_amt'] * 100, 2);			}						// total by vendor			$this->table['total']['vendor'][$r['vendor_id']]['sales_qty'] += $r['qty'];			$this->table['total']['vendor'][$r['vendor_id']]['sales_amt'] += round($r['amount']+$r['tax_amount'], 2);			$this->table['total']['vendor'][$r['vendor_id']]['tax_amt'] += $r['tax_amount'];			$this->table['total']['vendor'][$r['vendor_id']]['nett_sales_amt'] += $r['amount'];			$this->table['total']['vendor'][$r['vendor_id']]['consign_cost_amt'] += $r['consign_cost'];						if($this->table['total']['vendor'][$r['vendor_id']]['consign_cost_amt'] > 0){				$this->table['total']['vendor'][$r['vendor_id']]['consign_gp'] += round($r['amount'] - $r['consign_cost'], 2);				$this->table['total']['vendor'][$r['vendor_id']]['consign_gp_perc'] = round($this->table['total']['vendor'][$r['vendor_id']]['consign_gp'] / $this->table['total']['vendor'][$r['vendor_id']]['nett_sales_amt'] * 100, 2);			}			$this->table['total']['vendor'][$r['vendor_id']]['gst_list'][$r['tax_code']]['nett_sales_amt'] += $r['amount'];			$this->table['total']['vendor'][$r['vendor_id']]['gst_list'][$r['tax_code']]['consign_cost_amt'] += $r['consign_cost'];						// total by branch			$this->table['total']['branch'][$bid]['sales_qty'] += $r['qty'];			$this->table['total']['branch'][$bid]['sales_amt'] += round($r['amount']+$r['tax_amount'], 2);			$this->table['total']['branch'][$bid]['tax_amt'] += $r['tax_amount'];			$this->table['total']['branch'][$bid]['nett_sales_amt'] += $r['amount'];			$this->table['total']['branch'][$bid]['consign_cost_amt'] += $r['consign_cost'];						if($this->table['total']['branch'][$bid]['consign_cost_amt'] > 0){				$this->table['total']['branch'][$bid]['consign_gp'] += round($r['amount'] - $r['consign_cost'], 2);				$this->table['total']['branch'][$bid]['consign_gp_perc'] = round($this->table['total']['branch'][$bid]['consign_gp'] / $this->table['total']['branch'][$bid]['nett_sales_amt'] * 100, 2);			}			$this->table['total']['branch'][$bid]['gst_list'][$r['tax_code']]['nett_sales_amt'] += $r['amount'];			$this->table['total']['branch'][$bid]['gst_list'][$r['tax_code']]['consign_cost_amt'] += $r['consign_cost'];						// total by discount type and rate			$dtr_key = $r['price_type'].$r['discount_rate'];			$this->table['total']['price_type'][$dtr_key]['price_type'] = $r['price_type'];			$this->table['total']['price_type'][$dtr_key]['discount_rate'] = $r['discount_rate'];			$this->table['total']['price_type'][$dtr_key]['sales_qty'] += $r['qty'];			$this->table['total']['price_type'][$dtr_key]['sales_amt'] += round($r['amount']+$r['tax_amount'], 2);			$this->table['total']['price_type'][$dtr_key]['tax_amt'] += $r['tax_amount'];			$this->table['total']['price_type'][$dtr_key]['nett_sales_amt'] += $r['amount'];			$this->table['total']['price_type'][$dtr_key]['consign_cost_amt'] += $r['consign_cost'];						if($this->table['total']['price_type'][$dtr_key]['consign_cost_amt'] > 0){				$this->table['total']['price_type'][$dtr_key]['consign_gp'] += round($r['amount'] - $r['consign_cost'], 2);				$this->table['total']['price_type'][$dtr_key]['consign_gp_perc'] = round($this->table['total']['price_type'][$dtr_key]['consign_gp'] / $this->table['total']['price_type'][$dtr_key]['nett_sales_amt'] * 100, 2);			}						// store gst list			$this->sales_gst_list[$r['tax_code']] = $r['tax_code'];		}				$con_multi->sql_freeresult($q1);		//$con_multi->close_connection();	}	function output_excel(){	    global $smarty, $sessioninfo;				$this->process_form();		$this->generate_report();        include_once("include/excelwriter.php");    	$smarty->assign('no_header_footer', true);    	$filename = "consignment_sales_by_sku_".time().".xls";    	log_br($sessioninfo['id'], 'REPORT_EXPORT', 0, "Consignment Sales by SKU Report To Excel($filename)");    	Header('Content-Type: application/msexcel');		Header('Content-Disposition: attachment;filename='.$filename);		print ExcelWriter::GetHeader();		$this->display();		print ExcelWriter::GetFooter();	    exit;	}	    function generate_report(){		global $con, $smarty, $sessioninfo;		$this->table = $this->sales_gst_list = array();		if($this->branch_id_list){			foreach($this->branch_id_list as $bid){				$this->run_report($bid);			}		}				// set report fixed row display		$smarty->assign('report_row', 25);				$this->report_title[] = "Date From ".strtoupper($this->date_from)." to ".strtoupper($this->date_to);		if($this->vendor_id){			$vendor = $this->vendors[$this->vendor_id]['description'];		}else $vendor = "All";				$this->report_title[] = "Vendor: ".$vendor;        $smarty->assign('report_title', join('&nbsp;&nbsp;&nbsp;&nbsp;', $this->report_title));				$smarty->assign('table', $this->table);		$smarty->assign('sales_gst_list', $this->sales_gst_list);	}		function process_form(){	    global $con, $smarty, $sessioninfo;		if(!$_REQUEST['date_from']){			if($_REQUEST['date_to']) $_REQUEST['date_from'] = date('Y-m-d', strtotime("-1 month",strtotime($_REQUEST['date_to'])));			else{				$_REQUEST['date_from'] = date('Y-m-d', strtotime("-1 month"));				$_REQUEST['date_to'] = date('Y-m-d');			}		}		if(!$_REQUEST['date_to'] || strtotime($_REQUEST['date_from']) > strtotime($_REQUEST['date_to'])){			$_REQUEST['date_to'] = date('Y-m-d', strtotime("+1 month", strtotime($_REQUEST['date_from'])));		}		// check if the date is more than 1 month		$end_date = date("Y-m-d",strtotime("+1 month",strtotime($_REQUEST['date_from'])));    	if(strtotime($_REQUEST['date_to'])>strtotime($end_date) || strtotime($this->date_to) > $end_date) $_REQUEST['date_to'] = $end_date;		$this->date_from = $_REQUEST['date_from'];		$this->date_to = $_REQUEST['date_to'];		$this->vendor_id = $_REQUEST['vendor_id'];		if(BRANCH_CODE == 'HQ'){    // HQ mode			$branch_id = mi($_REQUEST['branch_id']);			$bgid = explode(",",$_REQUEST['branch_id']);			if($bgid[1] || $branch_id<0){ // branch group selected				if($this->branches_group){					foreach($this->branches_group['items'][$bgid[1]] as $bid=>$b){						$this->branch_id_list[] = $bid;					}				}				$this->report_title[] = "Branch Group: ".$this->branches_group['header'][$bgid[1]]['code'];			}elseif($branch_id){  // single branch selected			    $this->branch_id_list[] = $branch_id;                $this->report_title[] = "Branch: ".get_branch_code($branch_id);			}   			else{   // all branches selected				foreach($this->branches as $bid=>$b){                    $this->branch_id_list[] = $bid;				}				$this->report_title[] = "Branch: All";			}		}else{  // Branches mode            //$branch_id = mi($sessioninfo['branch_id']);            $this->branch_id_list[] = mi($sessioninfo['branch_id']);            $this->report_title[] = "Branch: ".BRANCH_CODE;		}		$this->po_filter = "";		$this->filters = array();		$this->filters[] = "pi.date between ".ms($this->date_from)." and ".ms($this->date_to);		$this->filters[] = "p.cancel_status=0 and s.sku_type = 'CONSIGN'";		if($this->vendor_id) $this->filters[] = "v.id=".mi($this->vendor_id);		//parent::process_form();	}	function load_branch_group($id=0){		global $con,$smarty,$con_multi;	    if(isset($this->branch_group))  return $this->branch_group;		$branch_group = array();				// check whether select all or specified group		if($id>0){			$where = "where id=".mi($id);			$where2 = "and bgi.branch_group_id=".mi($id);		}		// load header		$q1 = $con_multi->sql_query("select * from branch_group $where",false,false);		if($con_multi->sql_numrows($q1)<=0) return;		while($r = $con_multi->sql_fetchassoc($q1)){            $branch_group['header'][$r['id']] = $r;		}		$con_multi->sql_freeresult($q1);				// load items		$q1 = $con_multi->sql_query("select bgi.*,branch.code,branch.description from branch_group_items bgi left join branch on bgi.branch_id=branch.id where branch.active=1 $where2 order by branch.sequence, branch.code",false,false);		while($r = $con_multi->sql_fetchassoc($q1)){	        $branch_group['items'][$r['branch_group_id']][$r['branch_id']] = $r;	        $branch_group['have_group'][$r['branch_id']] = $r['branch_id'];		}		$con_multi->sql_freeresult($q1);				$this->branch_group = $branch_group;		//print_r($this->branch_group);		$smarty->assign('branch_group',$branch_group);		$smarty->assign('branches_group',$branch_group);		return $branch_group;	}}$CONSIGNMENT_SALES_BY_SKU_REPORT = new CONSIGNMENT_SALES_BY_SKU_REPORT('Consignment Sales by SKU Report');?>