<?php/*9/29/2009 4:22 PM Andy- all items cost use HQ cost1/6/2010 5:02:14 PM Andy- Add config 'ci_use_split_artno' to check whether split artno1/18/2011 5:31:26 PM Alex- change use report_server5/12/2011 4:35:38 PM Alex- add use hq cost6/24/2011 6:00:00 PM Andy- Make all branch default sort by sequence, code.2/4/2013 5:34 PM Justin- Enhanced to show and filter branches from regions or branch group base on user's regions.7/19/2017 17:16 Qiu Ying- Enhanced to use the artno and mcode in sku item table instead of artno_mcode in do_items and po_items8/2/2017 14:48 Qiu Ying- Bug fixed on cannot get the latest artno*/ include("include/common.php");include("include/class.report.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");class Consignment_Return_Stock_Report extends Report{	function run(){		global $con, $smarty, $config;				$q1 = $con->sql_query("select * from branch order by sequence,code");		while($r = $con->sql_fetchassoc($q1)){			if($config['masterfile_branch_region'] && $r['code'] != "HQ" && !check_user_regions($r['id'])) continue;			$branches[$r['id']] = $r;			$branch_filter[] = $r['id'];		}		$con->sql_freeresult($q1);				$table = $this->table;		$total = $this->total;		$sku_items_info = $this->sku_items_info;        $branch_data = $this->branch_data;		$date_from = $this->date_from;		$date_to = $this->date_to;		$report_group_by = $this->report_group_by;				$filter = array();		$filter[] = 'do.do_branch_id=1';		$filter[] = 'do.do_date between '.ms($date_from).' and '.ms($date_to);		$filter[] = 'approved=1 and checkout=1';				if($branch_filter) $filter[] = "do.branch_id in (".join(",", $branch_filter).")";				$filter = 'where '.join(' and ',$filter);				$con_multi= new mysql_multi();		if(!$con_multi){			die("Error: Fail to connect report server");		}				/*$sql = "select di.* ,(di.ctn *uom.fraction + di.pcs) as qty,((di.selling_price/uom.fraction)*(di.ctn *uom.fraction + di.pcs)) as total_selling,((di.cost_price/uom.fraction)*(di.ctn *uom.fraction + di.pcs)) as total_cost,si.mcode,si.description,si.sku_item_codefrom do_items dileft join do on do.id=di.do_id and do.branch_id=di.branch_idleft join uom on di.uom_id=uom.idleft join sku_items si on si.id=di.sku_item_id$filter";*/		if ($_REQUEST['hq_cost'])	$extrasql="si.hq_cost";					else	$extrasql="ifnull((select grn_cost from sku_items_cost_history sich where branch_id=1 and sich.sku_item_id=di.sku_item_id and sich.date<=do.do_date and sich.date>0 order by sich.date desc limit 1),si.cost_price)/uom.fraction";		$sql = "select di.* ,(di.ctn *uom.fraction + di.pcs) as qty,((di.selling_price/uom.fraction)*(di.ctn *uom.fraction + di.pcs)) as total_selling,(($extrasql)*(di.ctn *uom.fraction + di.pcs)) as total_cost,si.mcode,si.description,si.sku_item_code, si.artnofrom do_items dileft join do on do.id=di.do_id and do.branch_id=di.branch_idleft join uom on di.uom_id=uom.idleft join sku_items si on si.id=di.sku_item_id$filter";				//print $sql;		$q_m = $con_multi->sql_query($sql) or die(mysql_error());		while($r = $con_multi->sql_fetchrow($q_m)){		    $qty = $r['qty'];		    $r["artno_mcode"] = $r['artno'];		    if($report_group_by=='item'){                $table[$r['sku_item_id']]['qty'] += $qty;				$table[$r['sku_item_id']]['cost'] += $r['total_cost'];				$table[$r['sku_item_id']]['selling'] += $r['total_selling'];			}else{				$table[$r['branch_id']]['qty'] += $qty;				$table[$r['branch_id']]['cost'] += $r['total_cost'];				$table[$r['branch_id']]['selling'] += $r['total_selling'];			}			   			if(!$branches_info[$r['branch_id']]){                $branches_info[$r['branch_id']] = $branches[$r['branch_id']];			}						$branch_data[$r['sku_item_id']][$r['branch_id']]['qty'] += $qty;			$branch_data[$r['sku_item_id']][$r['branch_id']]['cost'] += $r['total_cost'];			$branch_data[$r['sku_item_id']][$r['branch_id']]['selling'] += $r['total_selling'];						if(!$sku_items_info[$r['sku_item_id']]){			    if($config['ci_use_split_artno']){			    	list($r['artno_code'],$r['artno_size']) = preg_split("/\s+/",$r['artno_mcode'],2);			    }                $sku_items_info[$r['sku_item_id']] = $r;			}						$total['qty'] += $qty;			$total['cost'] += $r['total_cost'];			$total['selling'] += $r['total_selling'];		}				//print_r($branches);		//print_r($branches_info);				$con_multi->sql_freeresult($q_m);				$this->table = $table;		$this->total = $total;		$this->branch_data = $branch_data;        $this->sku_items_info = $sku_items_info;        $this->branches_info = $branches_info;		$con_multi->close_connection();	}		function generate_report()	{		global $con, $smarty;				$this->run();		//print_r($this->sku_items_info);		if(!empty($this->sort_by)&&$this->table)    $this->sort_data();		//print_r($this->sku_items_info);		//print_r($this->table);				$smarty->assign('table',$this->table);		$smarty->assign('total',$this->total);		$smarty->assign('branch_data',$this->branch_data);		$smarty->assign('sku_items_info',$this->sku_items_info);		$smarty->assign('branches_info',$this->branches_info);	}		function process_form()	{	    global $con,$smarty,$sessioninfo;		// do my own form process				// call parent		parent::process_form();		$this->sort_by = $_REQUEST['sort_by'];		$this->sort_order = $_REQUEST['sort_order'];		$this->date_from = $_REQUEST['date_from'];		$this->date_to = $_REQUEST['date_to'];		$this->report_group_by = $_REQUEST['group_by'];	}		function default_values()	{        $_REQUEST['date_from'] = date("Y-m-d", strtotime("-1 month"));	    $_REQUEST['date_to'] = date("Y-m-d");	}		private function sort_data(){	    if($this->sort_by=='branch')	        usort($this->branches_info,array($this,'start_sort_branch'));	    else	usort($this->sku_items_info,array($this,'start_sort'));	}	function start_sort($a,$b){		$col = $this->sort_by;		$sort_order = $this->sort_order;	    if ($a[$col]==$b[$col]) return 0;	    elseif($sort_order=='desc') return ($a[$col]>$b[$col]) ? -1 : 1;	    else return ($a[$col]>$b[$col]) ? 1 : -1;	}		function start_sort_branch($a,$b){		$col = 'code';		$sort_order = $this->sort_order;	    if ($a[$col]==$b[$col]) return 0;	    elseif($sort_order=='desc') return ($a[$col]>$b[$col]) ? -1 : 1;	    else return ($a[$col]>$b[$col]) ? 1 : -1;	}}$report = new Consignment_Return_Stock_Report('Consignment Return Stock Report');?>