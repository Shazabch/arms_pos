<?php/*5/27/2011 4:12:43 PM Alex- create by me3/20/2012 2:17:37 PM Andy- Add show branch description.2/4/2013 5:34 PM Justin- Enhanced to show and filter branches from regions or branch group base on user's regions.*/include("include/common.php");include("include/class.report.php");if (!$login) js_redirect($LANG['YOU_HAVE_LOGGED_OUT'], "/index.php");include('consignment.include.php');load_branch();load_branch_group();class REPORT_DELIVERED_ITEMS_HISTORY extends Module{     function __construct($title){        global $con, $smarty, $sessioninfo;		//default assign        if (!$_REQUEST['to_date']){			$_REQUEST['to_date'] = date('Y-m-d');			$_REQUEST['from_date'] = date('Y-m-d', strtotime("-1 month"));		}elseif ($_REQUEST['to_date'] < $_REQUEST['from_date']){			$_REQUEST['to_date'] = date('Y-m-d', strtotime("+1 month", strtotime($_REQUEST['from_date'])));			}	        $bid  = get_request_branch();        $this->bid=$bid;       	$smarty->assign('form',$_REQUEST);    	parent::__construct($title);    }	function _default(){		if ($_REQUEST['view_type'] == 'items')			$this->display('report.delivered_items_history.items.tpl');		else			$this->display('report.delivered_items_history.branches.tpl');		exit;	}	function show_report(){		$this->generate_report();		$this->_default();	}	function output_excel(){	    global $smarty, $sessioninfo;				$this->generate_report();		        include_once("include/excelwriter.php");    	$smarty->assign('no_header_footer', true);    	$filename = "delivered_items_histoy_by_$_REQUEST[view_type]_".time().".xls";    	log_br($sessioninfo['id'], 'REPORT_EXPORT', 0, "Export Delivered Items History Report by $_REQUEST[view_type] To Excel($filename)");    	Header('Content-Type: application/msexcel');		Header('Content-Disposition: attachment;filename='.$filename);		print ExcelWriter::GetHeader();		if ($_REQUEST['view_type'] == 'items')			$this->display('report.delivered_items_history.items.tpl');		else			$this->display('report.delivered_items_history.branches.tpl');		print ExcelWriter::GetFooter();	    exit;	}		function generate_report(){	    global $con, $smarty, $sessioninfo, $config, $LANG;		$form=$_REQUEST;        $con_multi=new mysql_multi();		//================start filter===================		//branch		if ($form['view_type'] == "items"){			$err=$this->validate_data();			if ($err){				$smarty->assign("err",$err);				return;			}						$q1 = $con->sql_query("select * from branch where active=1 and id>0 order by sequence,code");			while($r = $con->sql_fetchassoc($q1)){				if($config['masterfile_branch_region'] && $r['code'] != "HQ" && !check_user_regions($r['id'])) continue;				$branches_id[$r['id']] = $r['id'];			}			$con->sql_freeresult($q1);			if($branches_id) $this->filter[] = "do.do_branch_id in (".join(",", $branches_id).")";						$filter=$this->filter;					}else{			if ($_REQUEST['branch_id'] > 0){			    $report_title[]="Deliver To Branch: ".get_branch_code($this->bid);				$filter[] = "do.do_branch_id= $this->bid";			}else{				if(preg_match("/^REGION_/", $_REQUEST['branch_id'])){					$region = str_replace("REGION_", "", $_REQUEST['branch_id']);					$q1 = $con->sql_query("select b.* from branch b where b.active = 1 and b.region = ".ms($region));					while($r = $con->sql_fetchassoc($q1)){						if($config['masterfile_branch_region'] && $r['code'] != "HQ" && !check_user_regions($r['id'])) continue;						$branches_id[$r['id']]=$r['id'];					}					$report_title[]="Deliver To Region: ".ucfirst($region);					$con->sql_freeresult($q1);				}else{					$bg_rid=$con->sql_query("select *, b.code 											from branch_group_items bgi 											left join branch_group bg on bgi.branch_group_id=bg.id 											left join branch b on b.id = bgi.branch_id											where branch_group_id=".ms(abs($this->bid)));					while ($bg=$con->sql_fetchassoc($bg_rid)){						if($config['masterfile_branch_region'] && $bg['code'] != "HQ" && !check_user_regions($bg['branch_id'])) continue;						$branches_id[$bg['branch_id']]=$bg['branch_id'];												$branch_group=$bg['code'];					}					$report_title[]="Deliver To Branch Group: ".ucfirst($branch_group);				}				$filter[] = "do.do_branch_id in (".join(',',$branches_id).")";				}		}				//date	    $report_title[]="Date: ".$form['from_date']." to ".$form['to_date'];		$from_date=ms($form['from_date']);		$to_date=ms($form['to_date']);		$filter[]="do.do_date between $from_date and $to_date";		$filter[]="do.do_type='transfer' and do.approved=1 and do.checkout=1";		$smarty->assign('report_title', join("&nbsp;&nbsp;&nbsp;&nbsp;",$report_title));		if ($filter)    $where = "where ".join(" and ", $filter);		$group_by="si.id,do.do_branch_id";		//==============end filter====================		$sql="select do.*,di.*,si.description, si.artno, si.sku_item_code, branch.code as branch_code, sum(((uom.fraction * di.ctn)+di.pcs)) as total_pcs , branch.description as branch_desc			from do_items di 			left join do on di.branch_id=do.branch_id and di.do_id=do.id			left join sku_items si on di.sku_item_id=si.id			left join uom on di.uom_id=uom.id 			left join branch on do.do_branch_id=branch.id			$where			group by $group_by			order by si.artno";		$con_multi->sql_query($sql);		if ($con_multi->sql_numrows()>0){			while($r=$con_multi->sql_fetchassoc()){				$detail[$r['branch_code']][$r['sku_item_id']]['total_pcs']+=$r['total_pcs'];				$detail[$r['branch_code']]['branch_desc'] = $r['branch_desc'];				$sku_items[$r['sku_item_id']]['description']=$r['description'];				$sku_items[$r['sku_item_id']]['sku_item_code']=$r['sku_item_code'];				$total['branch'][$r['branch_code']]['total_pcs']+=$r['total_pcs'];				$total['sku_items'][$r['sku_item_id']]['total_pcs']+=$r['total_pcs'];				$total['total']['total_pcs']+=$r['total_pcs'];												$artno_arr=explode(' ',$r['artno']);				$artno=$artno_arr[0];				unset($artno_arr[0]);				$size=join(' ', $artno_arr);				$sku_items[$r['sku_item_id']]['artno']=$artno;				$sku_items[$r['sku_item_id']]['size']=$size;			}						@ksort($detail);	//		@asort($sku_items);//		    usort($sku_items, "sort_d_data");//		    print_r($sku_items);		}		$smarty->assign('table', 1);		$smarty->assign('detail', $detail);		$smarty->assign('sku_items', $sku_items);		$smarty->assign('total', $total);			}		function validate_data(){		global $con, $smarty,$LANG;		$form=$_REQUEST;				if ($form['view_by'] == "single"){			if (!$form['sku_item_id']){				$err[]=sprintf($LANG['DO_NO_DATA'], 'sku item');				return $err;			}						//single item mode			if ($form['show_parent']){		        $sku_rid=$con->sql_query("select id 										from sku_items 										where sku_id = (select sku_id from sku_items where id=$form[sku_item_id])") or die(sql_error());				while ($temp = $con->sql_fetchassoc($sku_rid)){					$sku_codes[$temp['id']]=$temp['id'];				}				$con->sql_freeresult($sku_rid);				$list_items_id=join(',',$sku_codes);			}else{				$list_items_id=$form['sku_item_id'];			}		}else{		//group item mode			if (!$form['sku_code_list_2']){				$err[]=sprintf($LANG['DO_NO_DATA'], 'sku item');				return $err;			}						$list_items_id=$form['sku_code_list_2'];				        $sku_rid=$con->sql_query("select id,description, sku_item_code from sku_items where sku_item_code in (".$list_items_id.")") or die(sql_error());	        while ($temp = $con->sql_fetchassoc($sku_rid)){		        $sku_codes[$temp['id']]['sku_item_code']=$temp['sku_item_code'];		        $sku_codes[$temp['id']]['description']=$temp['description'];	        }			$con->sql_freeresult($sku_rid);			$smarty->assign("sku_codes",$sku_codes);		}				$this->filter[]="di.sku_item_id in ($list_items_id)";		}	}function sort_d_data($a,$b){    if (($a['artno']==$b['artno']) && $a['size']==$b['size']) return 0;    // different code, compare code    elseif($a['artno']!=$b['artno'])  return ($a['artno']>$b['artno']) ? 1:-1;	// the following will be the comparison of same code	elseif($a['size']!=$b['size'])  return ($a['size']>$b['size']) ? 1:-1;    elseif(!$b['size'])   return -1;  // b no size, return smaller than    elseif(!$a['size'])   return 1;   // a no size, return bigger than}$report = new REPORT_DELIVERED_ITEMS_HISTORY('Delivered Items History Report by '.ucfirst($_REQUEST['view_type']));?>